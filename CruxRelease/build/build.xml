<project default="dist" name="CruxRelease" basedir="../">

	<property file="build/version.properties" />

	<property name="srcdir" value="src" />
	<property name="distdir" value="dist" />
	<property name="expandeddir" value="dist/crux-${version}" />
	<property name="resourcedir" value="resource" />
	<property name="projectconfig" value="test/project.properties" />
	<property name="cmdfile" value="test/projectGenerator.cmd" />
	<property name="shfile" value="test/projectGenerator.sh" />
	<property name="launchershfile" value="test/start.sh" />
	<property name="launchercmdfile" value="test/start.cmd" />
	<property name="final.name" value="crux-project-generator" />
	<property name="war.name" value="quickstart" />
	<property name="xsd.dir" value="xsd" />
	
	<property name="temp.dir" value="${distdir}/temp" />
	<property name="web.root" value="war" />
	<property name="web.inf.dir" value="${web.root}/WEB-INF" />
	<property name="web.lib.dir" value="${web.inf.dir}/lib" />
	<property name="target.classes.dir" value="${web.inf.dir}/classes" />

	<property name="crux-srcdir" value="../Crux/src" />
	<property name="crux-compiler-srcdir" value="../CruxCompiler/src" />
	<property name="crux-gwt-widgets-srcdir" value="../CruxGWTWidgets/src" />
	<property name="crux-html-tags-srcdir" value="../CruxHtmlTags/src" />
	<property name="crux-html-tags-compile-srcdir" value="../CruxHTMLTagsCompileTask/src" />
	<property name="crux-modules-srcdir" value="../CruxModules/src" />
	<property name="crux-modules-admin-srcdir" value="../CruxModulesAdmin/src" />
	<property name="crux-modules-compiler-srcdir" value="../CruxModulesCompiler/src" />
	<property name="crux-scannotation-srcdir" value="../CruxScannotation/src" />
	<property name="crux-widgets-srcdir" value="../CruxWidgets/src" />

	<property name="crux.dist" value="../Crux/dist" />
	<property name="crux.gwt.dist" value="../CruxGWTWidgets/dist" />
	<property name="crux.widgets.dist" value="../CruxWidgets/dist" />
	<property name="crux.compiler.dist" value="../CruxCompiler/dist" />
	<property name="crux.themes.dist" value="../CruxThemes/dist" />
	<property name="crux.scannotation.dist" value="../CruxScannotation/dist" />
	<property name="crux.modules.dist" value="../CruxModules/dist" />
	<property name="crux.modules.admin.dist" value="../CruxModulesAdmin/dist" />
	<property name="crux.modules.compiler.dist" value="../CruxModulesCompiler/dist" />

	<property name="crux.htmltags.dist" value="../CruxHtmlTags/dist" />
	<property name="crux.htmltags.compile.dist" value="../CruxHTMLTagsCompileTask/dist" />
	
	<property name="crux.libs" value="../CruxLibs/crux" />
	<property name="crux.dependencies" value="../CruxLibs/dependencies" />

	<path id="build.classpath">
		<fileset dir="${web.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${resourcedir}/jars">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef name="cruxmodulecompiler" classname="br.com.sysmap.crux.tools.compile.CruxModulesCompilerTask" loaderref="build.classpath.loader" classpathref="build.classpath" />
	<taskdef name="blockremove" classname="br.com.sysmap.crux.tools.compile.utils.BlockRemoveTask" classpathref="build.classpath" />
	<taskdef name="generateSchemas" classname="br.com.sysmap.crux.tools.compile.SchemaGeneratorModulesTask" loaderref="build.classpath.loader" classpathref="build.classpath" />

	<!-- 
	========================================================================================================
		Generates Schemas
	========================================================================================================
	-->
	<target name="generate-schemas">
		<generateSchemas outputDir="${xsd.dir}" moduleName="quickstart">
			<classpath>
				<path refid="build.classpath" />
				<pathelement path="${target.classes.dir}" />
				<pathelement path="${web.root}" />
				<pathelement location="${src.dir}" />
			</classpath>
		</generateSchemas>
	</target>

	<!-- 
	========================================================================================================
		Generates the war for distribution
	========================================================================================================
	-->
	<target name="export-war">
		<!-- compiling -->
		<delete dir="${target.classes.dir}" failonerror="no" includeemptydirs="true" />
		<mkdir dir="${target.classes.dir}" />
		<javac destdir="${target.classes.dir}" deprecation="true" target="1.5" source="1.5" debug="true" optimize="false" excludes="**/public/*" 
			encoding="ISO-8859-1">
			<src>
				<pathelement location="${srcdir}" />
			</src>
			<classpath refid="build.classpath" />
		</javac>

		<!-- building war-->
		<delete dir="${temp.dir}" failonerror="no" includeemptydirs="yes" includes="**/*" />
		<mkdir dir="${temp.dir}" />

		<copydir dest="${temp.dir}/webroot" src="${web.root}">
			<exclude name="**/*.jar" />
		</copydir>
		
		<cruxmodulecompiler srcDir="${srcdir}" outputDir="${temp.dir}/webroot" keeppagesgeneratedfiles="true" pagesoutputdir="${temp.dir}/webroot">
			<classpath>
				<fileset dir="${web.lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${resourcedir}/jars/lib/build">
					<include name="**/*.jar" />
				</fileset>
				<pathelement path="${web.root}" />
				<pathelement path="${target.classes.dir}" />
			</classpath>
			<jvmarg value="-Xmx768M" />
			<jvmarg value="-Xms256M" />
		</cruxmodulecompiler>
		<delete>
			<fileset dir="${temp.dir}/webroot">
				<include name="**/*.crux.xml"/>
				<include name="**/*.template.xml"/>
			</fileset>
		</delete>
		
		<blockremove beginmarker="&lt;!--antReplacementBlockBegin--&gt;" endmarker="&lt;!--antReplacementBlockEnd--&gt;" file="${temp.dir}/webroot/WEB-INF/web.xml" />

		<move todir="${temp.dir}/${war.name}.war">
			<fileset dir="${temp.dir}/webroot" />
		</move>
		
		<move file="${temp.dir}/${war.name}.war" tofile="${expandeddir}/apps/${war.name}.war" />
		<delete dir="${temp.dir}" failonerror="no" includeemptydirs="yes" />
	</target>
	
	<!-- 
	========================================================================================================
		Compile
	========================================================================================================
	-->
	<target name="fast-compile-scripts">
		<cruxmodulecompiler srcDir="${srcdir}" outputDir="${web.root}" 
			keepPagesGeneratedFiles="true" pagesOutputDir="${web.root}">
			<classpath>
				<fileset dir="${web.lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${resourcedir}/jars/lib/build">
					<include name="**/*.jar" />
				</fileset>
				<pathelement path="${web.root}" />
				<pathelement path="${target.classes.dir}" />
			</classpath>

			<jvmarg value="-Xmx768M" />
			<jvmarg value="-Xms256M" />

			<arg value="-draftCompile" />
			<arg value="-style" />
			<arg value="Detailed" />
		</cruxmodulecompiler>
	</target>
	
	<!-- 
	========================================================================================================
		GenerateJavadoc
	========================================================================================================
	-->
	<target name="generate-javadoc">
		<javadoc encoding="ISO-8859-1" destdir="${expandeddir}/docs" protected="true" source="1.5" classpathref="build.classpath">
			<fileset dir="${crux-srcdir}" />
			<fileset dir="${crux-compiler-srcdir}" />
			<fileset dir="${crux-gwt-widgets-srcdir}" />
			<fileset dir="${crux-html-tags-srcdir}" />
			<fileset dir="${crux-html-tags-compile-srcdir}" />
			<fileset dir="${crux-modules-srcdir}" />
			<fileset dir="${crux-modules-admin-srcdir}" />
			<fileset dir="${crux-modules-compiler-srcdir}" />
			<fileset dir="${crux-scannotation-srcdir}" />
			<fileset dir="${crux-widgets-srcdir}" />
		</javadoc>
	</target>

	<!-- 
	========================================================================================================
		Dist
	========================================================================================================
	-->
	<target name="dist" >
		<!-- exporting -->
		<delete dir="${expandeddir}" failonerror="no" includeemptydirs="true" />
		<mkdir dir="${expandeddir}/tools" />
		
		<antcall target="export-war" />
		<antcall target="generate-javadoc" />
		
		<jar jarfile="${expandeddir}/tools/${final.name}.jar">
			<fileset dir="${target.classes.dir}" >
				<include name="br/com/sysmap/crux/tools/projectgen/**/*.class" />
			</fileset>
			<fileset dir="${srcdir}" >
				<include name="br/com/sysmap/crux/tools/projectgen/**/*.java" />
				<include name="/*.properties" />
				<include name="templates/**/*" />
			</fileset>
		</jar>
		<copy todir="${resourcedir}/jars/lib/web-inf">
			<fileset dir="${crux.dist}" includes="*.jar" />
			<fileset dir="${crux.gwt.dist}" includes="*.jar" />
			<fileset dir="${crux.widgets.dist}" includes="*.jar" />
			<fileset dir="${crux.scannotation.dist}" includes="*.jar" />
			<fileset dir="${crux.themes.dist}" includes="*.jar" />
			<fileset file="${crux.dependencies}/commons-logging.jar"/>
			<fileset file="${crux.dependencies}/gwt-servlet.jar"/>
			<fileset file="${crux.dependencies}/javassist.jar"/>
			<fileset file="${crux.dependencies}/jericho-html.jar"/>
			<fileset file="${crux.dependencies}/saxon9.jar"/>
			<fileset file="${crux.dependencies}/saxon9-dom.jar"/>
		</copy>
		<copy todir="${resourcedir}/jars/lib/build">
			<fileset dir="${crux.compiler.dist}" includes="*.jar" />
			<fileset file="${crux.dependencies}/gwt-dev.jar"/>
			<fileset file="${crux.dependencies}/gwt-ll.dll"/>
			<fileset file="${crux.dependencies}/gwt-module.dtd"/>
			<fileset file="${crux.dependencies}/gwt-user.jar"/>
		</copy>
		<copy todir="${resourcedir}/jars/lib/modules/build">
			<fileset dir="${crux.modules.compiler.dist}" includes="*.jar" />
		</copy>
		<copy todir="${resourcedir}/jars/lib/modules/web-inf">
			<fileset dir="${crux.modules.dist}" includes="*.jar" />
			<fileset file="${crux.dependencies}/svnkit.jar"/>
		</copy>
		<copy todir="${resourcedir}/jars/lib/modules/web-inf">
			<fileset dir="${crux.modules.admin.dist}" includes="*.jar" />
		</copy>
		<copy todir="${resourcedir}/jars/lib/legacy">
			<fileset dir="${crux.htmltags.dist}" includes="*.jar" />
			<fileset dir="${crux.htmltags.compile.dist}" includes="*.jar" />
		</copy>
		<copydir dest="${expandeddir}/lib/build" src="${resourcedir}/jars/lib/build" />
		<copydir dest="${expandeddir}/lib/web-inf" src="${resourcedir}/jars/lib/web-inf" />
		<copydir dest="${expandeddir}/lib/modules/build" src="${resourcedir}/jars/lib/modules/build" />
		<copydir dest="${expandeddir}/lib/modules/web-inf" src="${resourcedir}/jars/lib/modules/web-inf" />
		<copydir dest="${expandeddir}/lib/legacy" src="${resourcedir}/jars/lib/legacy" />

		<copy todir="${expandeddir}" file="${projectconfig}" />
		<copy todir="${expandeddir}" file="${cmdfile}" />
		<copy todir="${expandeddir}" file="${shfile}" />
		<copy todir="${expandeddir}" file="${launchershfile}" />
		<copy todir="${expandeddir}" file="${launchercmdfile}" />

		<exec command="chmod 755 ${expandeddir}/projectGenerator.sh" />
		<exec command="chmod 755 ${expandeddir}/start.sh" />
 
		<copy todir="${expandeddir}">
			<fileset dir="${resourcedir}/static" includes="*" />
		</copy>
		<!--zip basedir="${expandeddir}" destfile="${distdir}/crux-${version}.zip" /-->
		<!--delete dir="${tempdir}" failonerror="no" includeemptydirs="true" /-->
	</target>
</project>