<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.sysmap.com.br/crux/advanced-widgets/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.sysmap.com.br/crux/advanced-widgets/1.0" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:basic="http://www.sysmap.com.br/crux/basic-widgets/1.0">

	<xs:import schemaLocation="crux-basic-widgets.xsd" namespace="http://www.sysmap.com.br/crux/basic-widgets/1.0" />

	<xs:element name="decoratedPanel" type="DecoratedPanel" />
	<xs:element name="collapsePanel" type="CollapsePanel" />
	<xs:element name="titlePanel" type="TitlePanel" />
	<xs:element name="decoratedButton" type="DecoratedButton" />
	<xs:element name="transferList" type="TransferList" />
	<xs:element name="dynaTabs" type="DynaTabs" />
	<xs:element name="maskedTextBox" type="MaskedTextBox" />
	<xs:element name="stackMenu" type="StackMenu" />
	<xs:element name="filter" type="Filter" />
	<xs:element name="scrollBanner" type="ScrollBanner" />
	<xs:element name="confirm" type="Confirm" />
	<xs:element name="popup" type="Popup" />
	<xs:element name="timer" type="Timer" />
	<xs:element name="grid" type="Grid" />
	<xs:element name="sequentialPager" type="SequentialPager" />

	<!--
	=====================================================================================
		Every widget must be placed here
	===================================================================================== 
	-->
	<xs:group name="widgets">
		<xs:choice>
			<xs:element ref="decoratedPanel" />
			<xs:element ref="collapsePanel" />
			<xs:element ref="titlePanel" />
			<xs:element ref="decoratedButton"/>
			<xs:element ref="transferList"/>
			<xs:element ref="dynaTabs"/>
			<xs:element ref="maskedTextBox"/>
			<xs:element ref="stackMenu"/>
			<xs:element ref="filter"/>
			<xs:element ref="scrollBanner"/>
			<xs:element ref="confirm"/>
			<xs:element ref="popup"/>
			<xs:element ref="timer"/>
			<xs:element ref="grid"/>
			<xs:element ref="sequentialPager"/>
		</xs:choice>
	</xs:group>

	<!--
	=====================================================================================
		Common
	===================================================================================== 
	-->
	<xs:group name="WidgetComplexContent">
		<xs:choice>
			<xs:element name="widget">
				<xs:complexType>
					<xs:group ref="basic:widgets" />
				</xs:complexType>
			</xs:element>
			<xs:element name="text" type="xs:string" />
			<xs:element name="html" type="xs:anyType" />
		</xs:choice>
	</xs:group>

	<!--
	=====================================================================================
		Panels
	===================================================================================== 
	-->
	<xs:complexType name="AbstractDecoratedPanel">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:attributeGroup ref="basic:BorderWidth" />
				<xs:attributeGroup ref="basic:Spacing" />
				<xs:attributeGroup ref="basic:HorizontalAlignment" />
				<xs:attributeGroup ref="basic:VerticalAlignment" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DecoratedPanel">
		<xs:complexContent>
			<xs:extension base="AbstractDecoratedPanel">
				<xs:group ref="WidgetComplexContent"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="TitlePanel">
		<xs:complexContent>
			<xs:extension base="AbstractDecoratedPanel">
				<xs:sequence minOccurs="0">
					<xs:element minOccurs="0" name="title">
						<xs:complexType>
							<xs:group ref="WidgetComplexContent"/>
						</xs:complexType>	
					</xs:element>
					<xs:element minOccurs="0" name="body">
						<xs:complexType>
							<xs:group ref="WidgetComplexContent"/>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="CollapsePanel">
		<xs:complexContent>
			<xs:extension base="TitlePanel">
				<xs:attribute name="collapsible" type="xs:boolean" default="true"/>
				<xs:attribute name="collapsed" type="xs:boolean" default="false"/>
				<xs:attribute name="onBeforeCollapse"/>
				<xs:attribute name="onBeforeExpand"/>				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!--
	=====================================================================================
		Window
	===================================================================================== 
	-->
	<xs:complexType name="DynaTabs">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="tab" type="DynaTab" maxOccurs="unbounded"/>
				</xs:sequence>				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DynaTab">
		<xs:attribute name="url" use="required"/>
		<xs:attribute name="id" use="required"/>
		<xs:attribute name="label"/>
		<xs:attribute name="closeable" type="xs:boolean"/>
		<xs:attribute name="onBeforeFocus"/>
		<xs:attribute name="onBeforeBlur"/>
		<xs:attribute name="onBeforeClose"/>											
	</xs:complexType>
	
	<xs:complexType name="Confirm">
		<xs:attributeGroup ref="basic:AnimationEnabled"/>												
		<xs:attribute name="id" use="required"/>
		<xs:attribute name="message" use="required"/>
		<xs:attribute name="title"/>
		<xs:attribute name="onOk"/>
		<xs:attribute name="onCancel"/>	
	</xs:complexType>

	<xs:complexType name="Popup">
		<xs:attributeGroup ref="basic:AnimationEnabled"/>												
		<xs:attribute name="id" use="required"/>
		<xs:attribute name="url" use="required"/>
		<xs:attribute name="title"/>
		<xs:attribute name="closeable" type="xs:boolean"/>
		<xs:attribute name="onBeforeClose"/>
	</xs:complexType>

	<!--
	=====================================================================================
		Inputs
	===================================================================================== 
	-->
	<xs:complexType name="TransferList">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:attribute name="leftToRightButtonText"/>
				<xs:attribute name="rightToLeftButtonText"/>
				<xs:attribute name="leftListLabel"/>
				<xs:attribute name="rightListLabel"/>
				<xs:attribute name="visibleItemCount" type="xs:positiveInteger"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="Filter">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:attributeGroup ref="basic:AccessKey"/>
				<xs:attributeGroup ref="basic:Focus"/>
				<xs:attributeGroup ref="basic:TabIndex"/>
				<xs:attributeGroup ref="basic:Text"/>
				<xs:attributeGroup ref="basic:Value"/>
				<xs:attributeGroup ref="basic:AnimationEnabled"/>
				<xs:attributeGroup ref="basic:OnChange"/>
				<xs:attributeGroup ref="basic:OnSelection"/>
				<xs:attributeGroup ref="basic:KeyEvents"/>
				<xs:attribute name="popupStyleName"/>
				<xs:attribute name="limit" type="xs:positiveInteger"/>
				<xs:attribute name="autoSelectEnabled" type="xs:boolean"/>
				<xs:attribute name="filterable" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="MaskedTextBox">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:attribute name="formatter"/>
				<xs:attributeGroup ref="basic:Name"/>
				<xs:attributeGroup ref="basic:ReadOnly"/>
				<xs:attributeGroup ref="basic:Direction"/>				
				<xs:attributeGroup ref="basic:OnChange"/>
				<xs:attributeGroup ref="basic:FocusAttributes"/>
				<xs:attributeGroup ref="basic:FocusEvents"/>
				<xs:attributeGroup ref="basic:ClickEvents"/>
				<xs:attributeGroup ref="basic:MouseEvents"/>
				<xs:attributeGroup ref="basic:KeyEvents"/>		
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!--
	=====================================================================================
		Output
	===================================================================================== 
	-->
	<xs:complexType name="ScrollBanner">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="message" type="xs:string" maxOccurs="unbounded"/>			
				</xs:sequence>
				<xs:attribute name="messageScrollingPeriod" type="xs:positiveInteger"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="Timer">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="onTimeout" type="OnTimeout" maxOccurs="unbounded"/>			
				</xs:sequence>
				<xs:attribute name="initial" type="xs:nonNegativeInteger" default="0"/>
				<xs:attribute name="regressive" type="xs:boolean" default="false"/>
				<xs:attribute name="start" type="xs:boolean" default="false"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="OnTimeout">
		<xs:attribute name="time" use="required" type="xs:positiveInteger"/>
		<xs:attribute name="execute" use="required"/>
	</xs:complexType>
	
	<!--
	=====================================================================================
		Output
	===================================================================================== 
	-->
	<xs:complexType name="Grid">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:choice maxOccurs="unbounded">
						<xs:element name="dataColumn" type="DataColumn" maxOccurs="unbounded"/>
						<xs:element name="widgetColumn" type="WidgetColumn" maxOccurs="unbounded"/>						
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="pageSize" type="xs:positiveInteger" use="required"/>
				<xs:attribute name="dataSource" type="xs:string" use="optional"/>
				<xs:attribute name="cellSpacing" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="autoLoadData" type="xs:boolean" use="optional" default="false"/>
				<xs:attribute name="onRowRender" type="xs:string" use="optional"/>
				<xs:attribute name="onRowClick" type="xs:string" use="optional"/>
				<xs:attribute name="onRowDoubleClick" type="xs:string" use="optional"/>
				<xs:attribute name="rowSelection" use="optional" default="unselectable">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="unselectable" />
							<xs:enumeration value="single" />
							<xs:enumeration value="multiple" />
							<xs:enumeration value="singleWithRadioButton" />
							<xs:enumeration value="multipleWithCheckBox" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="GridColumn">
		<xs:attribute name="width" type="xs:string" use="optional"/>
		<xs:attribute name="visible" type="xs:boolean" use="optional" default="true"/>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="key" type="xs:string" use="required"/>
		<xs:attributeGroup ref="basic:HorizontalAlignment"/>
		<xs:attributeGroup ref="basic:VerticalAlignment"/>
	</xs:complexType>
	
	<xs:complexType name="DataColumn">
		<xs:complexContent>
			<xs:extension base="GridColumn">
				<xs:attribute name="formatter" type="xs:string" use="optional"/>	
			</xs:extension>		
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="WidgetColumn">
		<xs:complexContent>
			<xs:extension base="GridColumn">
				<xs:group ref="basic:widgets" />
			</xs:extension>		
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="SequentialPager">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:attribute name="pageable" type="xs:string" use="required"/>
				<xs:attribute name="onPage" type="xs:string" use="optional"/>
				<xs:attribute name="enabled" type="xs:boolean" use="optional" default="true"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>	
	
	<!--
	=====================================================================================
		Commands
	===================================================================================== 
	-->
	<xs:complexType name="DecoratedButton">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:attributeGroup ref="basic:Name"/>
				<xs:attributeGroup ref="basic:Text"/>
				<xs:attributeGroup ref="basic:FocusAttributes"/>
				<xs:attributeGroup ref="basic:FocusEvents"/>
				<xs:attributeGroup ref="basic:ClickEvents"/>
				<xs:attributeGroup ref="basic:MouseEvents"/>
				<xs:attributeGroup ref="basic:KeyEvents"/>
				<xs:attributeGroup ref="basic:Value"/>		
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="StackMenu">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="item" type="StackMenuItem" maxOccurs="unbounded" />
				</xs:sequence>		
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="StackMenuItem">
		<xs:complexContent>
			<xs:extension base="basic:AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="item" type="StackMenuItem" maxOccurs="unbounded" />
				</xs:sequence>
				<xs:attributeGroup ref="basic:ClickEvents"/>
				<xs:attribute name="label" use="required"/>
				<xs:attribute name="open" default="false" type="xs:boolean"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
</xs:schema>
