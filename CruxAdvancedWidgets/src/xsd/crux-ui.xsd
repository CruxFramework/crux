<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
	xmlns="http://www.sysmap.com.br/crux/ui/1.0" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	attributeFormDefault="unqualified" 
	elementFormDefault="qualified" 
	targetNamespace="http://www.sysmap.com.br/crux/ui/1.0"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:advanced="http://www.sysmap.com.br/crux/advanced-widgets/1.0">
	
	<xs:import schemaLocation="crux-advanced-widgets.xsd" namespace="http://www.sysmap.com.br/crux/advanced-widgets/1.0"/>
	
	<xs:element name="screen" type="Screen"/>
	<xs:element name="suggestBox" type="SuggestBox"/>
	<xs:element name="captionPanel" type="CaptionPanel"/>
	<xs:element name="dialogBox" type="DialogBox"/>
	<xs:element name="disclosurePanel" type="DisclosurePanel"/>
	<xs:element name="tree" type="Tree"/>
	<xs:element name="absolutePanel" type="AbsolutePanel"/>
	<xs:element name="anchor" type="Anchor"/>
	<xs:element name="button" type="Button"/>
	<xs:element name="horizontalPanel" type="HorizontalPanel"/>
	<xs:element name="verticalPanel" type="VerticalPanel"/>
	<xs:element name="dockPanel" type="DockPanel"/>
	<xs:element name="checkBox" type="CheckBox"/>
	<xs:element name="radioButton" type="RadioButton"/>
	<xs:element name="dateBox" type="DateBox"/>
	<xs:element name="datePicker" type="DatePicker"/>
	<xs:element name="deckPanel" type="DeckPanel"/>
	<xs:element name="popupPanel" type="PopupPanel"/>
	<xs:element name="decoratedPopupPanel" type="DecoratedPopupPanel"/>
	<xs:element name="stackPanel" type="StackPanel"/>
	<xs:element name="decoratedStackPanel" type="DecoratedStackPanel"/>
	<xs:element name="tabBar" type="TabBar"/>
	<xs:element name="decoratedTabBar" type="DecoratedTabBar"/>
	<xs:element name="tabPanel" type="TabPanel"/>
	<xs:element name="decoratedTabPanel" type="DecoratedTabPanel"/>
	<xs:element name="simplePanel" type="SimplePanel"/>
	<xs:element name="decoratorPanel" type="DecoratorPanel"/>
	<xs:element name="focusPanel" type="FocusPanel"/>
	<xs:element name="fileUpload" type="FileUpload"/>
	<xs:element name="flexTable" type="FlexTable"/>
	<xs:element name="grid" type="Grid"/>
	<xs:element name="hyperlink" type="Hyperlink"/>
	<xs:element name="inlineHyperlink" type="InlineHyperlink"/>
	<xs:element name="flowPanel" type="FlowPanel"/>
	<xs:element name="formPanel" type="FormPanel"/>
	<xs:element name="frame" type="Frame"/>
	<xs:element name="hidden" type="Hidden"/>
	<xs:element name="horizontalSplitPanel" type="HorizontalSplitPanel"/>
	<xs:element name="verticalSplitPanel" type="VerticalSplitPanel"/>
	<xs:element name="label" type="Label"/>
	<xs:element name="HTML" type="Html"/>
	<xs:element name="HTMLPanel" type="HtmlPanel"/>
	<xs:element name="image" type="Image"/>
	<xs:element name="inlineHTML" type="InlineHtml"/>
	<xs:element name="inlineLabel" type="InlineLabel"/>
	<xs:element name="listBox" type="ListBox"/>
	<xs:element name="menuBar" type="MenuBar"/>
	<xs:element name="namedFrame" type="NamedFrame"/>
	<xs:element name="textBox" type="TextBox"/>
	<xs:element name="passwordTextBox" type="PasswordTextBox"/>
	<xs:element name="textArea" type="TextArea"/>
	<xs:element name="pushButton" type="PushButton"/>
	<xs:element name="toggleButton" type="ToggleButton"/>
	<xs:element name="richTextArea" type="RichTextArea"/>
	<xs:element name="scrollPanel" type="ScrollPanel"/>
	<xs:element name="simpleLazyPanel" type="SimpleLazyPanel"/>
	<xs:element name="simpleCheckBox" type="SimpleCheckBox"/>
	<xs:element name="simpleRadioButton" type="SimpleRadioButton"/>
	<xs:element name="splashScreen" type="SplashScreen"/>
	
	<!--
	=====================================================================================
		Every widget must be placed here
	===================================================================================== 
	-->	
	<xs:group name="widgets">
		<xs:choice>
			<xs:element ref="captionPanel" />
			<xs:element ref="dialogBox" />
			<xs:element ref="disclosurePanel" />
			<xs:element ref="suggestBox" />
			<xs:element ref="tree" />
			<xs:element ref="absolutePanel" />
			<xs:element ref="anchor" />
			<xs:element ref="button" />
			<xs:element ref="horizontalPanel" />
			<xs:element ref="verticalPanel" />
			<xs:element ref="dockPanel" />
			<xs:element ref="checkBox" />
			<xs:element ref="dateBox" />
			<xs:element ref="datePicker"/>
			<xs:element ref="deckPanel"/>
			<xs:element ref="popupPanel"/>
			<xs:element ref="decoratedPopupPanel"/>
			<xs:element ref="stackPanel"/>
			<xs:element ref="decoratedStackPanel"/>
			<xs:element ref="tabBar"/>
			<xs:element ref="decoratedTabBar"/>
			<xs:element ref="tabPanel"/>
			<xs:element ref="decoratedTabPanel"/>
			<xs:element ref="simplePanel"/>
			<xs:element ref="decoratorPanel"/>
			<xs:element ref="focusPanel"/>
			<xs:element ref="fileUpload"/>
			<xs:element ref="flexTable"/>
			<xs:element ref="grid"/>
			<xs:element ref="hyperlink"/>
			<xs:element ref="inlineHyperlink"/>
			<xs:element ref="flowPanel"/>
			<xs:element ref="formPanel"/>
			<xs:element ref="frame"/>
			<xs:element ref="hidden"/>
			<xs:element ref="horizontalSplitPanel"/>
			<xs:element ref="verticalSplitPanel"/>
			<xs:element ref="label"/>
			<xs:element ref="HTML"/>
			<xs:element ref="HTMLPanel"/>
			<xs:element ref="image"/>
			<xs:element ref="inlineHTML"/>
			<xs:element ref="inlineLabel"/>
			<xs:element ref="listBox"/>
			<xs:element ref="menuBar"/>
			<xs:element ref="namedFrame"/>
			<xs:element ref="textBox"/>
			<xs:element ref="textArea"/>
			<xs:element ref="passwordTextBox"/>
			<xs:element ref="pushButton"/>
			<xs:element ref="toggleButton"/>
			<xs:element ref="radioButton"/>
			<xs:element ref="richTextArea"/>
			<xs:element ref="scrollPanel"/>
			<xs:element ref="simpleLazyPanel"/>
			<xs:element ref="simpleCheckBox"/>
			<xs:element ref="simpleRadioButton"/>
			<xs:group ref="advanced:widgets"/>		
		</xs:choice>
	</xs:group>
	
	<!--
	=====================================================================================
		Direction
	===================================================================================== 
	-->
	<xs:simpleType name="Direction">
		<xs:restriction base="xs:string">
			<xs:enumeration value="rtl" />
			<xs:enumeration value="ltr" />
			<xs:enumeration value="default" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:attributeGroup name="Direction">
		<xs:attribute name="direction" type="Direction"/>
	</xs:attributeGroup>
	
	<!--
	=====================================================================================
		Alignment
	===================================================================================== 
	-->
	<xs:simpleType name="HorizontalAlignment">
		<xs:restriction base="xs:string">
			<xs:enumeration value="left" />
			<xs:enumeration value="center" />
			<xs:enumeration value="right" />
			<xs:enumeration value="default" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="VerticalAlignment">
		<xs:restriction base="xs:string">
			<xs:enumeration value="bottom" />
			<xs:enumeration value="middle" />
			<xs:enumeration value="top" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:attributeGroup name="HorizontalAlignment">
		<xs:attribute name="horizontalAlignment" type="HorizontalAlignment" />
	</xs:attributeGroup>
	
	<xs:attributeGroup name="VerticalAlignment">
		<xs:attribute name="verticalAlignment" type="VerticalAlignment" />
	</xs:attributeGroup>

	<!--
	=====================================================================================
		Attribute groups
	===================================================================================== 
	-->

	<!-- 
	*************************
		Event Groups
	*************************
	-->
	<xs:attributeGroup name="OnOpen">
		<xs:attribute name="onOpen"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnClose">
		<xs:attribute name="onClose"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnLoadOracle">
		<xs:attribute name="onLoadOracle"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnLoadFormat">
		<xs:attribute name="onLoadFormat"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnChange">
		<xs:attribute name="onChange"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnHighlight">
		<xs:attribute name="onHighlight"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnShowRange">
		<xs:attribute name="onShowRange"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnSelection">
		<xs:attribute name="onSelection"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnBeforeSelection">
		<xs:attribute name="onBeforeSelection"/>
	</xs:attributeGroup>
	
		<xs:attributeGroup name="OnSubmit">
		<xs:attribute name="onSubmit"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnSubmitComplete">
		<xs:attribute name="onSubmitComplete"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnLoad">
		<xs:attribute name="onLoad"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnLoadImage">
		<xs:attribute name="onLoadImage"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnError">
		<xs:attribute name="onError"/>
	</xs:attributeGroup>

	<xs:attributeGroup name="OnExecute">
		<xs:attribute name="onExecute"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OnScroll">
		<xs:attribute name="onScroll"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="FocusEvents">
		<xs:attribute name="onFocus" />
		<xs:attribute name="onBlur" />	
	</xs:attributeGroup>
	
	<xs:attributeGroup name="OpenCloseEvents">
		<xs:attribute name="onOpen"/>
		<xs:attribute name="onClose"/>		
	</xs:attributeGroup>
	
	<xs:attributeGroup name="MouseEvents">
		<xs:attribute name="onMouseDown"/>
		<xs:attribute name="onMouseMove"/>
		<xs:attribute name="onMouseUp"/>
		<xs:attribute name="onMouseOut"/>
		<xs:attribute name="onMouseOver"/>
		<xs:attribute name="onMouseWheel"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="ClickEvents">
		<xs:attribute name="onClick"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="KeyEvents">
		<xs:attribute name="onKeyDown"/>
		<xs:attribute name="onKeyPress"/>
		<xs:attribute name="onKeyUp"/>
	</xs:attributeGroup>
		
	<!-- 
	*************************
		Focus Attributes
	*************************
	-->
	<xs:attributeGroup name="AccessKey">
		<xs:attribute name="accessKey" type="Char"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="TabIndex">
		<xs:attribute name="tabIndex" type="xs:positiveInteger"/>
	</xs:attributeGroup>	
	
	<xs:attributeGroup name="Enabled">
		<xs:attribute name="enabled" type="xs:boolean" default="true"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Focus">
		<xs:attribute name="focus" type="xs:boolean" default="false"/>
	</xs:attributeGroup>
		
	<xs:attributeGroup name="FocusAttributes">
		<xs:attributeGroup ref="AccessKey" />
		<xs:attributeGroup ref="TabIndex" />
		<xs:attributeGroup ref="Focus" />
		<xs:attributeGroup ref="Enabled"/> 
	</xs:attributeGroup>
		
	<!-- 
	*************************
		Text Attributes
	*************************
	-->
	<xs:attributeGroup name="WordWrap">
		<xs:attribute name="wordWrap" type="xs:boolean"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="MaxLength">
		<xs:attribute name="maxLength" type="xs:positiveInteger"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="VisibleLength">
		<xs:attribute name="visibleLength" type="xs:int"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="ReadOnly">
		<xs:attribute name="readOnly" type="xs:boolean" default="false"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="TextAlignment">
		<xs:attribute name="textAlignment">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="left"/>
					<xs:enumeration value="right"/>
					<xs:enumeration value="center"/>
					<xs:enumeration value="justify"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	
	
	<!-- 
	*************************
		Link Attributes
	*************************
	-->
	<xs:attributeGroup name="LinkAttributes">
		<xs:attribute name="href"/>
		<xs:attribute name="target"/>
	</xs:attributeGroup>		
	
	<!-- 
	*************************
		Others
	*************************
	-->
	<xs:attributeGroup name="AnimationEnabled">
		<xs:attribute name="animationEnabled" type="xs:boolean" default="false"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Text">
		<xs:attribute name="text"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Value">
		<xs:attribute name="value"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Name">
		<xs:attribute name="name"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="BorderWidth">
		<xs:attribute name="borderWidth" type="xs:int"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Spacing">
		<xs:attribute name="spacing" type="xs:int"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="CellSpacing">
		<xs:attribute name="cellSpacing" type="xs:int"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="CellPadding">
		<xs:attribute name="cellPadding" type="xs:int"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="StyleName">
		<xs:attribute name="styleName"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Visible">
		<xs:attribute name="visible"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Width">
		<xs:attribute name="width"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Height">
		<xs:attribute name="height"/>
	</xs:attributeGroup>
	
	<xs:attributeGroup name="Url">
		<xs:attribute name="url"/>
	</xs:attributeGroup>
	
	<!--
	=====================================================================================
		SplashScreen
	===================================================================================== 
	-->	
	<xs:complexType name="SplashScreen">
		<xs:attribute name="style" type="xs:string"/>
	</xs:complexType>

	<!--
	=====================================================================================
		Screen
	===================================================================================== 
	-->	
	<xs:group name="ScreenContent">
		<xs:choice>
			<xs:any minOccurs="0" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:group>
		
	<xs:complexType name="Screen" mixed="true">
		<xs:group ref="ScreenContent" />
		<xs:attribute name="manageHistory" type="xs:boolean" default="false"/>
		<xs:attribute name="title" type="xs:string"/>
		<xs:attribute name="useEventHandler" type="xs:string"/>
		<xs:attribute name="useModuleShareable" type="xs:string"/>
		<xs:attribute name="onClosing" type="xs:string"/>
		<xs:attribute name="onClose" type="xs:string"/>
		<xs:attribute name="onResized" type="xs:string"/>
		<xs:attribute name="onLoad" type="xs:string"/>
	</xs:complexType>
	
	<!--
	=====================================================================================
		Base widgets
	===================================================================================== 
	-->	
	<xs:complexType name="AbstractWidget">
		<xs:attribute name="id" use="required" />
		<xs:attribute name="width"/>
		<xs:attribute name="height"/>
		<xs:attribute name="visible" default="true" type="xs:boolean"/>
		<xs:attribute name="tooltip"/>
		<xs:attribute name="styleName"/>
		<xs:attribute name="style"/>
		<xs:attribute name="onLoadWidget"/>
	</xs:complexType>
	
	<xs:complexType name="AbstractHtmlInput">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="id" use="required" />
				<xs:attribute name="width"/>
				<xs:attribute name="height"/>
				<xs:attribute name="visible" default="true" type="xs:boolean"/>
				<xs:attribute name="tooltip"/>
				<xs:attribute name="styleName"/>
				<xs:attribute name="style"/>
				<xs:attributeGroup ref="Name"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="OnChange"/>
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:complexType name="AbstractHtmlInputValue">
		<xs:complexContent>
			<xs:extension base="AbstractHtmlInput">
				<xs:attributeGroup ref="Value"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="AbstractTextBox">
		<xs:complexContent>
			<xs:extension base="AbstractHtmlInputValue">
				<xs:attributeGroup ref="ReadOnly"/>
				<xs:attributeGroup ref="TextAlignment"/>
				<xs:attributeGroup ref="Direction"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<!--
	=====================================================================================
		Simple types
	===================================================================================== 
	-->	
	<xs:simpleType name="Char">
		<xs:restriction base="xs:string">
			<xs:maxLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
	<!--
	=====================================================================================
		Panels
	===================================================================================== 
	-->
	<xs:complexType name="AbsolutePanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence  minOccurs="0">
					<xs:element name="widget" minOccurs="0" maxOccurs="unbounded">
						<xs:complexType>
							<xs:group ref="widgets"/>
							<xs:attribute name="top" type="xs:int"/>
							<xs:attribute name="left" type="xs:int"/>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="CaptionPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:choice minOccurs="0">
						<xs:element name="captionText" type="xs:string"/>
						<xs:element name="captionHtml" type="xs:anyType"/>
					</xs:choice>
					<xs:element name="widget" minOccurs="0">
						<xs:complexType>
							<xs:group ref="widgets"></xs:group>
						</xs:complexType>
					</xs:element>
				</xs:sequence>				
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DisclosurePanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence>
					<xs:choice minOccurs="0">
						<xs:element name="textHeader" type="xs:string"/>
						<xs:element name="widgetHeader">
							<xs:complexType>
								<xs:group ref="widgets" />
							</xs:complexType>						
						</xs:element>
					</xs:choice>
					<xs:element name="widgetContent" minOccurs="0">
						<xs:complexType>
							<xs:group ref="widgets"/>
						</xs:complexType>
					</xs:element>	
				</xs:sequence>				
				<xs:attribute name="open" type="xs:boolean" default="true"/>
				<xs:attributeGroup ref="AnimationEnabled"/>
				<xs:attributeGroup ref="OnLoadImage" />
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="Cell">
		<xs:group ref="widgets" />
		<xs:attribute name="height"/>
		<xs:attribute name="width"/>
		<xs:attributeGroup ref="HorizontalAlignment"/>
		<xs:attributeGroup ref="VerticalAlignment"/>
	</xs:complexType>
	
	<xs:complexType name="CellPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0" maxOccurs="unbounded">
					<xs:choice minOccurs="0">
						<xs:element name="cell" type="Cell" />
						<xs:group ref="widgets" />
					</xs:choice>
				</xs:sequence>
				<xs:attributeGroup ref="BorderWidth"/>
				<xs:attributeGroup ref="Spacing"/>
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="HorizontalPanel">
		<xs:complexContent>
			<xs:extension base="CellPanel">
				<xs:attributeGroup ref="HorizontalAlignment"/>
				<xs:attributeGroup ref="VerticalAlignment"/>
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="VerticalPanel">
		<xs:complexContent>
			<xs:extension base="CellPanel">
				<xs:attributeGroup ref="HorizontalAlignment"/>
				<xs:attributeGroup ref="VerticalAlignment"/>
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DockPanelCell">
		<xs:complexContent>
			<xs:extension base="Cell">
				<xs:attribute name="direction" default="center">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="center"/>
							<xs:enumeration value="lineStart"/>
							<xs:enumeration value="lineEnd"/>
							<xs:enumeration value="east"/>
							<xs:enumeration value="north"/>
							<xs:enumeration value="south"/>
							<xs:enumeration value="west"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DockPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0" maxOccurs="unbounded">
					<xs:choice minOccurs="0">
						<xs:element name="cell" type="DockPanelCell" />
						<xs:group ref="widgets" />
					</xs:choice>
				</xs:sequence>
				<xs:attributeGroup ref="BorderWidth"/>
				<xs:attributeGroup ref="Spacing"/>
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DeckPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:group ref="widgets" minOccurs="0" maxOccurs="unbounded"/>
				<xs:attributeGroup ref="AnimationEnabled"/>
				<xs:attribute name="visibleWidget" type="xs:positiveInteger"/>
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="StackPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0" maxOccurs="unbounded">
					<xs:element name="stackItem">
						<xs:complexType>
							<xs:sequence>
								<xs:choice minOccurs="0">
									<xs:element name="textTitle" type="xs:string"/>
									<xs:element name="htmlTitle" type="xs:anyType"/>
								</xs:choice>
								<xs:element name="widget">
									<xs:complexType>
										<xs:group ref="widgets"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>							
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="visibleStack" type="xs:positiveInteger"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DecoratedStackPanel">
		<xs:complexContent>
			<xs:extension base="StackPanel"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="SimplePanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:group ref="widgets" minOccurs="0" maxOccurs="1"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="SimpleLazyPanel">
		<xs:complexContent>
			<xs:extension base="SimplePanel"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="ScrollPanel">
		<xs:complexContent>
			<xs:extension base="SimplePanel">
				<xs:attribute name="alwaysShowScrollBars" type="xs:boolean" default="false"/>
				<xs:attribute name="verticalScrollPosition" default="top">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="top"/>
							<xs:enumeration value="bottom"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="horizontalScrollPosition" default="left">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="left"/>
							<xs:enumeration value="right"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="ensureVisible" type="xs:string"/>
				<xs:attributeGroup ref="OnScroll"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DecoratorPanel">
		<xs:complexContent>
			<xs:extension base="SimplePanel"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="FocusPanel">
		<xs:complexContent>
			<xs:extension base="SimplePanel">
				<xs:attributeGroup ref="TabIndex"/>
				<xs:attributeGroup ref="AccessKey"/>
				<xs:attributeGroup ref="Focus"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="FlowPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:group ref="widgets" minOccurs="0" maxOccurs="unbounded"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="FormPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:group ref="widgets" minOccurs="0" maxOccurs="unbounded"/>
				<xs:attribute name="method" default="get">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="get"/>
							<xs:enumeration value="post"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="encoding" default="application/x-www-form-urlencoded">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="multipart/form-data"/>
							<xs:enumeration value="application/x-www-form-urlencoded"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attributeGroup ref="OnSubmit"/>
				<xs:attributeGroup ref="OnSubmitComplete"/>
				<xs:attribute name="action"/>
				<xs:attribute name="target"/>				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="HorizontalSplitPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="left" minOccurs="0">
						<xs:complexType>
							<xs:group ref="widgets"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="right" minOccurs="0">
						<xs:complexType>
							<xs:group ref="widgets"/>
						</xs:complexType>
					</xs:element>					
				</xs:sequence>
				<xs:attributeGroup ref="OnLoadImage"/>
				<xs:attribute name="splitPosition"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="VerticalSplitPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="top" minOccurs="0">
						<xs:complexType>
							<xs:group ref="widgets"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="bottom" minOccurs="0">
						<xs:complexType>
							<xs:group ref="widgets"/>
						</xs:complexType>
					</xs:element>					
				</xs:sequence>
				<xs:attributeGroup ref="OnLoadImage"/>
				<xs:attribute name="splitPosition"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="HtmlPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:any maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!--
	=====================================================================================
		Popup and window
	===================================================================================== 
	-->
	<xs:complexType name="PopupPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:group ref="widgets" minOccurs="0" maxOccurs="1"/>
				<xs:attributeGroup ref="AnimationEnabled"/>
				<xs:attributeGroup ref="OnClose"/>
				<xs:attribute name="previewAllNativeEvents" type="xs:boolean" default="false"/>
				<xs:attribute name="autoHide" type="xs:boolean" default="false"/>
				<xs:attribute name="modal" type="xs:boolean" default="false"/>
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DecoratedPopupPanel">
		<xs:complexContent>
			<xs:extension base="PopupPanel" />
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DialogBox">
		<xs:complexContent>
			<xs:extension base="DecoratedPopupPanel" />
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="Frame">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="Url" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="NamedFrame">
		<xs:complexContent>
			<xs:extension base="Frame">
				<xs:attribute name="name" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!--
	=====================================================================================
		Table and Grid
	===================================================================================== 
	-->
	<xs:complexType name="TableRow">
		<xs:sequence minOccurs="0">
			<xs:element name="cell" maxOccurs="unbounded" type="TableCell" />
		</xs:sequence>
		<xs:attributeGroup ref="StyleName"/>
		<xs:attributeGroup ref="Visible"/>
		<xs:attributeGroup ref="VerticalAlignment"/>
	</xs:complexType>
	
	<xs:complexType name="TableCell">
		<xs:choice minOccurs="0">
			<xs:element name="text" type="xs:string"/>
			<xs:element name="html" type="xs:anyType"/>
			<xs:element name="widget">
				<xs:complexType>
					<xs:group ref="widgets"/>
				</xs:complexType>
			</xs:element>											
		</xs:choice>
		<xs:attributeGroup ref="StyleName"/>
		<xs:attributeGroup ref="Visible"/>
		<xs:attributeGroup ref="Height"/>
		<xs:attributeGroup ref="Width"/>
		<xs:attributeGroup ref="WordWrap"/>
		<xs:attributeGroup ref="HorizontalAlignment"/>
		<xs:attributeGroup ref="VerticalAlignment"/>										
	</xs:complexType>
	
	<xs:complexType name="FlexTable">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="row" maxOccurs="unbounded" type="TableRow"/>
				</xs:sequence>
				<xs:attributeGroup ref="BorderWidth"/>
				<xs:attributeGroup ref="CellSpacing"/>
				<xs:attributeGroup ref="CellPadding"/>
				<xs:attributeGroup ref="ClickEvents"/>
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="Grid">
		<xs:complexContent>
			<xs:extension base="FlexTable" />
		</xs:complexContent>
	</xs:complexType>
	
	<!--
	=====================================================================================
		Tree
	===================================================================================== 
	-->
	<xs:complexType name="Tree">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence>
					<xs:element name="item" minOccurs="0" maxOccurs="unbounded" type="TreeItem"/>
				</xs:sequence>
				<xs:attributeGroup ref="AnimationEnabled"/>
				<xs:attributeGroup ref="TabIndex"/>
				<xs:attributeGroup ref="AccessKey"/>
				<xs:attributeGroup ref="Focus"/>
				<xs:attributeGroup ref="OnLoadImage"/>
				<xs:attributeGroup ref="OnSelection"/>
				<xs:attributeGroup ref="OnOpen"/>
				<xs:attributeGroup ref="OnClose"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attribute name="useLeafImages" type="xs:boolean" default="true"/>
				<xs:attribute name="openSelectedItem" type="xs:boolean" default="false"/>
			</xs:extension>			
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="TreeItem">
		<xs:sequence>
			<xs:choice>
				<xs:element name="textTitle" type="xs:string" />
				<xs:element name="widgetTitle">
					<xs:complexType>
						<xs:group ref="widgets"/>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="item" minOccurs="0" maxOccurs="unbounded" type="TreeItem"/>
		</xs:sequence>
		<xs:attribute name="state" type="xs:boolean" />
		<xs:attribute name="selected" type="xs:boolean" />
	</xs:complexType>
	
	<!--
	=====================================================================================
		Composite
	===================================================================================== 
	-->
	<xs:complexType name="SuggestBox">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="AccessKey"/>
				<xs:attributeGroup ref="Focus"/>
				<xs:attributeGroup ref="TabIndex"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="Value"/>
				<xs:attributeGroup ref="AnimationEnabled"/>
				<xs:attributeGroup ref="OnLoadOracle"/>
				<xs:attributeGroup ref="OnChange"/>
				<xs:attributeGroup ref="OnSelection"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attribute name="popupStyleName"/>
				<xs:attribute name="limit" type="xs:positiveInteger"/>
				<xs:attribute name="autoSelectEnabled" type="xs:boolean"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="TabBar">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0" maxOccurs="unbounded">
					<xs:element name="tab">
						<xs:complexType>
							<xs:sequence>
								<xs:choice minOccurs="0">
									<xs:element name="text" type="xs:string"/>
									<xs:element name="html" type="xs:anyType"/>
									<xs:element name="widget">
										<xs:complexType>
											<xs:group ref="widgets"/>
										</xs:complexType>	
									</xs:element>
								</xs:choice>
							</xs:sequence>
							<xs:attributeGroup ref="ClickEvents"/>
							<xs:attributeGroup ref="KeyEvents"/>
							<xs:attribute name="enabled" type="xs:boolean" default="true"/>
							<xs:attribute name="wordWrap" type="xs:boolean" default="true"/>							
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attributeGroup ref="OnSelection"/>
				<xs:attributeGroup ref="OnBeforeSelection"/>
				<xs:attribute name="visibleTab" type="xs:int"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DecoratedTabBar">
		<xs:complexContent>
			<xs:extension base="TabBar"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="TabPanel">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0" maxOccurs="unbounded">
					<xs:element name="panel">
						<xs:complexType>
							<xs:sequence>
								<xs:choice minOccurs="0">
									<xs:element name="tabText" type="xs:string"/>
									<xs:element name="tabHtml" type="xs:anyType"/>
									<xs:element name="tabWidget">
										<xs:complexType>
											<xs:group ref="widgets"/>
										</xs:complexType>	
									</xs:element>
								</xs:choice>
								<xs:element name="panelContent">
									<xs:complexType>
										<xs:group ref="widgets"/>
									</xs:complexType>	
								</xs:element>
							</xs:sequence>
							<xs:attributeGroup ref="ClickEvents"/>
							<xs:attributeGroup ref="KeyEvents"/>
							<xs:attribute name="tabEnabled" type="xs:boolean" default="true"/>
							<xs:attribute name="tabWordWrap" type="xs:boolean" default="true"/>							
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attributeGroup ref="OnSelection"/>
				<xs:attributeGroup ref="OnBeforeSelection"/>
				<xs:attributeGroup ref="AnimationEnabled"/>
				<xs:attribute name="visibleTab" type="xs:int"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DecoratedTabPanel">
		<xs:complexContent>
			<xs:extension base="TabPanel"/>
		</xs:complexContent>
	</xs:complexType>
	
	<!--
	=====================================================================================
	Input	
	===================================================================================== 
	-->
	<xs:complexType name="AbstractCheckBox">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="OnChange"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="Name"/>
				<xs:attributeGroup ref="Value"/>
				<xs:attribute name="checked" type="xs:boolean" default="false"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="SimpleCheckBox">
		<xs:complexContent>
			<xs:extension base="AbstractCheckBox" />
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="CheckBox">
		<xs:complexContent>
			<xs:extension base="AbstractCheckBox">
				<xs:sequence minOccurs="0">
					<xs:any maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="AbstractRadioButton">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="OnChange"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="Value"/>
				<xs:attribute name="name" use="required"/>
				<xs:attribute name="checked" type="xs:boolean" default="false"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="SimpleRadioButton">
		<xs:complexContent>
			<xs:extension base="AbstractRadioButton"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="RadioButton">
		<xs:complexContent>
			<xs:extension base="AbstractRadioButton">
				<xs:sequence minOccurs="0">
					<xs:any maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DateBox">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:all>
					<xs:element name="datePicker" type="DatePicker" minOccurs="0"/>
					<xs:element name="pattern" minOccurs="0" type="xs:string"/>
				</xs:all>
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="Value"/>
				<xs:attributeGroup ref="OnLoadFormat"/>
				<xs:attributeGroup ref="OnChange"/>
				<xs:attribute name="reportFormatError" type="xs:boolean" default="true"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="DatePicker">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="Value"/>
				<xs:attributeGroup ref="OnChange"/>
				<xs:attributeGroup ref="OnHighlight"/>
				<xs:attributeGroup ref="OnShowRange"/>
				<xs:attribute name="datePattern"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="FileUpload">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="Name"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="Hidden">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="Name"/>
				<xs:attributeGroup ref="Value"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="ListBox">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:element name="item" type="ListBoxItem" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attributeGroup ref="Name"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="OnChange"/>
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attribute name="multiple" type="xs:boolean" default="false"/>
				<xs:attribute name="visibleItemCount" type="xs:positiveInteger" default="4"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="ListBoxItem">
		<xs:attributeGroup ref="Value"/>
		<xs:attribute name="label" use="required"/>
		<xs:attribute name="selected" type="xs:boolean" default="false"/>
	</xs:complexType>
	
	<xs:complexType name="TextArea">
		<xs:simpleContent>
			<xs:extension base="AbstractTextBox">
				<xs:attribute name="characterWidth" type="xs:int"/>
				<xs:attribute name="visibleLines" type="xs:int"/>
			</xs:extension>
		</xs:simpleContent>		
	</xs:complexType>
	
	<xs:complexType name="TextBox">
		<xs:complexContent>
			<xs:extension base="AbstractTextBox">
				<xs:attributeGroup ref="MaxLength"/>
				<xs:attributeGroup ref="VisibleLength"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="PasswordTextBox">
		<xs:complexContent>
			<xs:extension base="TextBox"/>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="RichTextArea">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:any maxOccurs="unbounded"/>
				</xs:sequence>			
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>				
				<xs:attribute name="backColor"/>
				<xs:attribute name="fontName"/>
				<xs:attribute name="foreColor"/>				
				<xs:attribute name="fontSize">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="1"/>
							<xs:maxInclusive value="7"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>				
				<xs:attribute name="justification" default="left">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="center"/>
							<xs:enumeration value="left"/>
							<xs:enumeration value="right"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>				
				<xs:attribute name="bold" type="xs:boolean" default="false"/>
				<xs:attribute name="italic" type="xs:boolean" default="false"/>
				<xs:attribute name="subscript" type="xs:boolean" default="false"/>
				<xs:attribute name="superscript" type="xs:boolean" default="false"/>
				<xs:attribute name="underline" type="xs:boolean" default="false"/>
				<xs:attribute name="strikethrough" type="xs:boolean" default="false"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<!--
	=====================================================================================
	Output	
	===================================================================================== 
	-->
	<xs:complexType name="Label">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="Direction"/>
				<xs:attributeGroup ref="HorizontalAlignment"/>
				<xs:attributeGroup ref="WordWrap"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="Html">
		<xs:complexContent>
			<xs:extension base="Label">
				<xs:sequence minOccurs="0">
					<xs:any maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="InlineHtml">
		<xs:complexContent>
			<xs:extension base="Html"/>
		</xs:complexContent>		
	</xs:complexType>
	
	<xs:complexType name="InlineLabel">
		<xs:complexContent>
			<xs:extension base="Label"/>
		</xs:complexContent>		
	</xs:complexType>
	
	
	<!--
	=====================================================================================
	Graphics	
	===================================================================================== 
	-->
	<xs:complexType name="Image">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:attributeGroup ref="OnLoad"/>
				<xs:attributeGroup ref="OnError"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="Url"/>
				<xs:attribute name="leftRect" type="xs:int"/>
				<xs:attribute name="rightRect" type="xs:int"/>
				<xs:attribute name="widthRect" type="xs:int"/>
				<xs:attribute name="heightRect" type="xs:int"/>					
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>	
	
	<!--
	=====================================================================================
	Command	
	===================================================================================== 
	-->
	<xs:complexType name="Anchor">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:any maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attributeGroup ref="LinkAttributes"/>
				<xs:attributeGroup ref="Direction"/>
				<xs:attributeGroup ref="WordWrap"/>
				<xs:attributeGroup ref="HorizontalAlignment"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="Name"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="Button">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:any maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="Name"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="Hyperlink">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:any maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attribute name="targetHistoryToken"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="InlineHyperlink">
		<xs:complexContent>
			<xs:extension base="Hyperlink"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="CustomButton">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence>
					<xs:choice maxOccurs="6" minOccurs="0">
						<xs:element name="up" 			type="CustomButtonFace"/>
						<xs:element name="upDisabled" 	type="CustomButtonFace"/>
						<xs:element name="upHovering" 	type="CustomButtonFace"/>
						<xs:element name="down" 		type="CustomButtonFace"/>
						<xs:element name="downDisabled" type="CustomButtonFace"/>
						<xs:element name="downHovering" type="CustomButtonFace"/>
					</xs:choice>
				</xs:sequence>
				<xs:attributeGroup ref="Name"/>
				<xs:attributeGroup ref="Text"/>
				<xs:attributeGroup ref="OnChange"/>
				<xs:attributeGroup ref="FocusAttributes"/>
				<xs:attributeGroup ref="FocusEvents"/>
				<xs:attributeGroup ref="ClickEvents"/>
				<xs:attributeGroup ref="MouseEvents"/>
				<xs:attributeGroup ref="KeyEvents"/>
				<xs:attributeGroup ref="Value"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="CustomButtonFace">
		<xs:choice maxOccurs="1" minOccurs="1">
			<xs:element name="html" type="CustomButtonFaceHtml"/>
			<xs:element name="text" type="CustomButtonFaceText"/>
			<xs:element name="image" type="CustomButtonFaceImage"/>
		</xs:choice>
	</xs:complexType>
	
	<xs:complexType name="CustomButtonFaceHtml">
		<xs:sequence minOccurs="0">
			<xs:any maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:simpleType name="CustomButtonFaceText">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
	<xs:complexType name="CustomButtonFaceImage">
		<xs:attribute name="top" type="xs:int"/>
		<xs:attribute name="left" type="xs:int"/>
		<xs:attribute name="width" type="xs:int"/>
		<xs:attribute name="height" type="xs:int"/>
		<xs:attributeGroup ref="Url"/>		
	</xs:complexType>
	
	<xs:complexType name="PushButton">
		<xs:complexContent>
			<xs:extension base="CustomButton"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="ToggleButton">
		<xs:complexContent>
			<xs:extension base="CustomButton">
				<xs:attribute name="down" type="xs:boolean" default="false"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!--
	=====================================================================================
	Menu	
	===================================================================================== 
	-->
	<xs:complexType name="MenuBar">
		<xs:complexContent>
			<xs:extension base="AbstractWidget">
				<xs:sequence minOccurs="0">
					<xs:choice maxOccurs="unbounded">
						<xs:element name="html" type="HtmlMenuItem"/>
						<xs:element name="separator" type="SepatorMenuItem"/>
						<xs:element name="text" type="TextMenuItem"/>
					</xs:choice>
				</xs:sequence>
				<xs:attributeGroup ref="OnLoadImage"/>
				<xs:attributeGroup ref="AnimationEnabled"/>
				<xs:attributeGroup ref="OnClose"/>
				<xs:attribute name="vertical" type="xs:boolean" default="false"/>
				<xs:attribute name="autoOpen" type="xs:boolean" default="false"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="AbstractMenuItem">
		<xs:attributeGroup ref="OnExecute"/>
	</xs:complexType>
	
	<xs:complexType name="HtmlMenuItem">
		<xs:complexContent>
			<xs:extension base="AbstractMenuItem">
				<xs:sequence minOccurs="1">
					<xs:element name="caption" type="MenuItemHtmlCaption" minOccurs="1"/>
					<xs:element name="items" type="MenuItems" maxOccurs="1" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="SepatorMenuItem" />
	
	<xs:complexType name="TextMenuItem">
		<xs:complexContent>
			<xs:extension base="AbstractMenuItem">
				<xs:sequence minOccurs="1">
					<xs:element name="caption" type="xs:string" minOccurs="1"/>
					<xs:element name="items" type="MenuItems" maxOccurs="1" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="MenuItemHtmlCaption">
		<xs:sequence minOccurs="0">
			<xs:any maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="MenuItems">
		<xs:sequence minOccurs="1">
			<xs:element name="menuBar" type="MenuBar" maxOccurs="1" minOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	
</xs:schema>