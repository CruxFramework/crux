# LifeCycle
lifeCycleRegisterPhases=[lifecycle 001] - Request Life Cycle Phases for serlvet ''{0}'' registered with success
lifeCycleRegisterPhaseError=[lifecycle 002] - Error registering a life cycle phase: {0}
lifeCycleProcessRequestError=[request 001] - Error processing request: {0}

# RPCResponseRenderPhase
rpcResponseRenderPhaseError=[request 002] - Error rendering response for RPC event: {0}
rpcResponseRenderComponentError=[request 010] - Error rendering component response for RPC event: {0}

# ServerResponseRenderPhase
serverResponseRenderPhaseError=[request 003] - Error rendering response for server event: {0}
serverResponseRenderComponentError=[request 010] - Error rendering component response for server event: {0}

# DispatchPhase
dispatchPhasePropertyNotBound=[request 004] - Controller does not contains property for parameter: {0}

# ControllerFactoryInitializer
controllerFactoryInitializerUsingDefaultFactory=[request 005] - Using default controller factory.

# ScreenStateManagerInitializer
screenStateManagerInitializerUsingDefaultFactory=[request 011] - Using default screen state manager.

# ParametersBindPhase
parametersBindPhaseErrorPopulatingBean=[request 006] - Error populating screen with request parameter: {0}. Error: {1}
parametersBindPhaseInvalidScreenRequested=[request 007] - The requested screen {0} does not exists
parametersBindPhaseErrorCreatingScreen=[request 008] - Error creating the requested screen: {0}

# JsonSerializer
jsonSerializerRegisterError=[request 009] - Error registering serializers {0}.
jsonSerializerParserError=[request 010] - Couldn't parse JSON.

# AnnotationScanner
annotationScannerBuildIndex=[annotationScanner 001] - Building index of annotations for classes
annotationScannerIndexNotFound=[annotationScanner 002] - Index not created. Run the buildIndex method first.
annotationScannerBuildIndexError=[annotationScanner 003] - Error creating index of annotations: {0}

# Controllers
controllersInitializeError=[controllers 001] - Error initializing controllers: {0}

# ClientHandlers
clientHandlersHandlerInitializeError=[clientHandlers 001] - Error initializing clientHandler: {0}
clientHandlersCallbackInitializeError=[clientHandlers 002] - Error initializing clientCallback: {0}

#Formatters
formattersFormatterInitializeError=[formatters 002] - Error initializing formatter: {0}

# ScreenFactory
screenFactoryCheckFileUpdateError=[screenFactory 001] - Error checking last modified date: {0}
screenFactoryScreeResourceNotFound=[screenFactory 002] - Screen {0} not found!
screenFactoryErrorRetrievingScreen=[screenFactory 003] - Error retrieving screen {0}. Error: {1}
screenFactoryGenericErrorCreateComponent=[screenFactory 004] - Error Creating component {0}. Error: {1}.
screenFactoryComponentIdRequired=[screenFactory - 005] - The id attribute is required for CRUX Components.
screenFactoryInvalidComponentParent=[screenFactory - 006] - The component ''{0}'' only can be attached in a container or directly in the screen.
screenFactoryErrorCreateComponent=[screenFactory - 007] - Can not create component ''{0}''. Verify the component type.
screenFactoryErrorDuplicatedComponent=[screenFactory - 008] - Error creating component. Duplicated identifier: ''{0}''
screenFactoryNotInitialized=[screenFactory - 009] - ScreenFactory was not initialized yet. Initialize it with the CruxInitializer Listener or calling getInstance(ServletContext).
screenFactoryFormatterNotFound=[screenFactory - 010] - Formatter {0} not found.
screenFactoryDuplicateProperty=[screenFactory - 011] - Property {0} was bound to more than one component.
screenFactoryErrorCreatingFormatter=[screenFactory - 012] - Error creating formatter {0}.

# ScreenStateManager
screenStateManagerErrorCloningScreen=[screenStateManager - 001] - Error retrieving screen {0} from its template: {1}.

# ComponentConfig
componentConfigParserError=[componentConfig - 001] - Error parsing crux configuration file: {0}

# ComponentConfigScanner
componentConfigScannerInitializationError=[componentConfigScanner 001] - Error initializing componentConfigScanner: {0}

# InitializerListener
initializerListenerComponentsRegistered=[initializerListener - 001] - Components registered.
initializerListenerControllersRegistered=[initializerListener - 002] - Server Controllers registered.
initializerListenerScreenFactoryInitialized=[initializerListener - 003] - Server screenFactoryInitialized.
initializerListenerClientModulesInitialized=[initializerListener - 004] - Client Modules initialized.
initializerListenerClientFormattersInitialized=[initializerListener - 005] - Client Formatters initialized.

# ComponentParserImpl
componentParserImplComponentPropertyError=[componentParserImpl - 001] - Error setting property {0} for component {1}.

# ScreenPropertyError
ScreenPropertyError=[Screen - 001] - Error setting property {0} for component {1}.

# ScannerURLS
scannerURLSErrorSearchingLibDir=[scannerURLS - 001] - Error searching /WEB-INF/lib dir: {0}
scannerURLSErrorSearchingClassesDir=[scannerURLS - 001] - Error searching /WEB-INF/classes dir: {0}
