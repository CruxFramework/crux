<html 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:c="http://www.cruxframework.org/crux" 
	xmlns:a="http://www.cruxframework.org/crux/widgets"
	xmlns:b="http://www.cruxframework.org/crux/gwt"	
	xmlns:s="http://www.cruxframework.org/templates/showcase">

	<head>
		<title>Shared Context</title>
		<link rel="stylesheet" type="text/css" href="style/css/standard.css" />
	</head>

	<body>
		<script type="text/javascript" src="showcase/showcase.nocache.js"></script>

		<c:screen useController="contextController"/>

		<center>
			<table cellspacing="15">
				<tr>
					<td align="center">
						<table>
							<tr>
								<td width="70"><b:textBox id="message"/></td>
								<td><a:decoratedButton id="button" onClick="contextController.save" text="Save in Context"/></td>	
							</tr>
						</table>
					</td>				
				</tr>
				<tr>
					<td colspan="2">
						<a:titlePanel id="bordersEast" width="400">
							<a:title>
								<a:text>Internal Frame (horrible borders intentionally set)</a:text>
							</a:title>
							<a:body>
								<a:widget>
									<b:namedFrame id="frame" name="frame" url="contextFrame.html" width="350" height="150" style="margin:15px"/>
								</a:widget>
							</a:body>
						</a:titlePanel>
					</td>
				</tr>
			</table>
		</center>
		<s:info sourcesController="contextSourcesController">
			<s:widgetInfo>
				The Crux Context is a common area where you can store and retrieve data. Each data entry is associated
				 with a key. You can think this mechanism as a web session, but residing on the client side of the
				  application. It means you can store not only general-use information, but user-related data too.
			</s:widgetInfo>
			<s:exampleInfo>
				you can see the Context working. An information is written by one frame e read by another.
			</s:exampleInfo> 
		</s:info>
		
	</body>
</html>