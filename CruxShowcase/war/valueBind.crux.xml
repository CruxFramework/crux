<html 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:c="http://www.cruxframework.org/crux" 
	xmlns:a="http://www.cruxframework.org/crux/widgets"
	xmlns:b="http://www.cruxframework.org/crux/gwt"	
	xmlns:s="http://www.cruxframework.org/templates/showcase">

	<head>
		<title>Value Bind</title>
		<link rel="stylesheet" type="text/css" href="style/css/standard.css" />
	</head>

	<body>

		<script type="text/javascript" src="showcase/showcase.nocache.js"></script>

		<c:screen useController="valueBindController"/>

		<center>
			<a:decoratedPanel id="borders" width="450">
				<a:widget>
					<b:verticalPanel id="formAndButtonPanel" width="100%" spacing="10">
						<b:grid id="grid" cellSpacing="5" styleName="FormGrid">
							<b:row>
								<b:cell>
									<b:text>Name:</b:text>
								</b:cell>
								<b:cell>
									<b:widget><b:textBox id="name" width="300" value="Anna Prentice"/></b:widget>
								</b:cell>
							</b:row>
							<b:row>
								<b:cell>
									<b:text>Phone:</b:text>
								</b:cell>
								<b:cell>
									<b:widget><a:maskedTextBox id="phone" formatter="phone" width="100" value="(123)456-7890"/></b:widget>
								</b:cell>
							</b:row>
							<b:row>
								<b:cell>
									<b:text>Date of Birth:</b:text>
								</b:cell>
								<b:cell>
									<b:widget><a:maskedTextBox id="dateOfBirth" formatter="date" width="100" value="06/08/1980"/></b:widget>
								</b:cell>
							</b:row>
						</b:grid>
						<a:decoratedButton id="button" text="Click Me!" onClick="valueBindController.onClick" width="120"/>
					</b:verticalPanel>
				</a:widget>
			</a:decoratedPanel>
		</center>
		
		<s:info sourcesController="baseSourcesController" width="600">
			<s:widgetInfo>
				Crux has a mechanism that provides automatic binding between values from the user interface and your code. 
				By annotating the variables on your controller, Crux ensures they will always be up to date in relation
				to the user interface values. The binding is made in both ways: if the user changes any value on the UI, your 
				controller is updated; if you change a variable on your controller, the UI is updated.  
			</s:widgetInfo>
			<s:exampleInfo>
				we have a simple form, which maps an object named Person. If you click the button, a dialog is shown with the 
				values from the form. Take a look at the controller's source code and note that we read the values directly
				from the controller's DTO and not from the form fields.
			</s:exampleInfo>
		</s:info>
		
	</body>
</html>