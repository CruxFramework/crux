<html 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:c="http://www.cruxframework.org/crux" 
	xmlns:a="http://www.cruxframework.org/crux/widgets"
	xmlns:b="http://www.cruxframework.org/crux/gwt"	
	xmlns:s="http://www.cruxframework.org/templates/showcase">

	<head>
		<title>Streaming Data Grid</title>
		<link rel="stylesheet" type="text/css" href="style/css/standard.css" />
	</head>

	<body>

		<script type="text/javascript" src="showcase/showcase.nocache.js"></script>
		
		<c:screen onLoad="streamingGridController.onLoad" useController="streamingGridController,streamingGridSourcesController" useDataSource="streamingGridDataSource"/>
		
		<center>
		
			<b:horizontalPanel id="mainPanel" spacing="20">
				<b:cell verticalAlignment="top">
					<a:titlePanel id="tPanel" width="470">
						<a:title>
							<a:widget>
								<b:horizontalPanel id="hPanel" width="100%">
									<b:cell horizontalAlignment="left" verticalAlignment="middle">
										<b:label id="title" text="Contacts" styleName="SpecialLabel"/>
									</b:cell>
									<b:cell horizontalAlignment="right" verticalAlignment="middle">
										<a:sequentialPager id="pager" pageable="streamingGrid"/>	
									</b:cell>				 
								</b:horizontalPanel>
							</a:widget>
						</a:title>
						<a:body>
							<a:widget>
								<a:grid id="streamingGrid" height="200" width="99%" dataSource="streamingGridDataSource" 
									stretchColumns="true" pageSize="7">
									<a:dataColumn key="name" label="Name"/>
									<a:dataColumn key="phone" label="Phone"/>
									<a:dataColumn key="birthday" label="Birthday" formatter="birthday"/>
								</a:grid>
							</a:widget>
						</a:body>
					</a:titlePanel>
				</b:cell>
			</b:horizontalPanel>
			
			<s:info sourcesController="streamingGridSourcesController" width="720">
				<s:widgetInfo>
					Grids can incrementally fetch data from server. It can be done by using a Remote DataSource.
					The main goal of a Remote DataSource is to ensure that each record page is fetched from the 
					server only when the user asks for it for the first time. Once a page was fetched, it is cached 
					in the browser's memory and future requests for it are handled entirely at the client side.
				</s:widgetInfo>
				<s:exampleInfo>
					we are using a Remote Streaming DataSource. Its main difference from a simple Remote DataSource
					is that it does not requires you to inform how much records exist at the server side. In other words,
					it allows you to fetch records incrementally until they end. <br/>You may note that there is a little 
					delay when you ask for a page for the first time. It occurs because Crux is fetching it from the server. 
					Once a page is fetched, if you as for it again, it is immediately returned.
				</s:exampleInfo>
			</s:info>


		</center>						
	</body>	
</html>