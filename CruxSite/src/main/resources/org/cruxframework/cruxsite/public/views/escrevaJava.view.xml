<v:view 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:v="http://www.cruxframework.org/view" 
	xmlns:core="http://www.cruxframework.org/crux" 
	xmlns:crux="http://www.cruxframework.org/crux/widgets"
	xmlns:gwt="http://www.cruxframework.org/crux/gwt"
	useController="mainController" title="Home"> 
	
	<gwt:HTML id="viewTextPanel" styleName="viewTextPanel">
		<section>
			<h1>Escreva Java, sempre!</h1>
			
			<p>Desenvolva aplicações Web com simplicidade e coesão. Com o Crux, o abismo semântico entre cliente e servidor não existe mais.
			Você programa a estrutura da interface gráfica de maneira convencional, usando HTML e CSS, entretanto, o comportamento da interface 
			gráfica é escrito em Java. As vantagens dessa abordagem são:</p>
			
			<ul>
				<li>
					<h2>Maior coesão</h2>
					<p>Os tipos de dados pertencentes ao domínio da aplicação são visíveis na camada cliente. Isso significa que 
					você não precisa se preocupar em criar outros tipos diferentes apenas para mapear as informações a serem trafegadas.</p>
				</li>	
				<li>
					<h2>Simplicidade na comunicação com o servidor</h2>
					<p>Chamadas ao servidor são programadas de forma muito similar a chamadas Java locais. Os objetos de negócio 
					existentes no lado servidor são acessíveis através de interfaces de invocação, que expõem métodos de negócio 
					com assinaturas bem definidas, suportando parâmetros e devolvendo resultados fortemente tipados. 
					</p>
				</li>	
				<li>
					<h2>Verificação em tempo de compilação</h2>
					<p>Quantas vezes você descobriu erros de sintaxe JavaScript em produção? Aplicações Crux são sintática e semanticamente validadas 
					em tempo de compilação. Isso significa que você detecta e corrige erros ainda na etapa de desenvolvimento, o que é muito 
					mais barato e rápido.</p>
				</li>
				<li>
					<h2>Use todo o poder do Eclipse</h2>
					<p>Você pode usar a IDE Eclipse para escrever o código da interface. Desfrute da robustez e da praticidade 
					dos geradores e auto-completadores de código também no desenvolvimento do lado cliente da aplicação.</p>
				</li>
			</ul>
		</section>
	</gwt:HTML>		
	
	<div class="buttonBar">
		<crux:button id="btnVoltar" onSelect="mainController.showViewInfo" text="Voltar"/>
	</div>
	
</v:view>