<v:view 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:v="http://www.cruxframework.org/view" 
	xmlns:core="http://www.cruxframework.org/crux" 
	xmlns:crux="http://www.cruxframework.org/crux/widgets"
	xmlns:gwt="http://www.cruxframework.org/crux/gwt"
	xmlns:t="http://www.cruxframework.org/templates/menus"
	useController="mainController" title="Manual"> 
	
	<gwt:HTMLPanel id="infoContainer">
	
		<t:menuaprenda pageTitle="Manual" />
	
		<div class="bigText">
			<div class="container">
				<h2>Crux Framework 5 Manual</h2>	
				<!--<p>Saiba em quais pontos o Crux Framework se sobressai e como ele pode se tornar o framework ideal para o seu projeto.</p>
				 -->
				<!-- MANUAL STARTS HERE -->
				<div class="manual">
					
<div class="book" id="d5e1">

<!-- **** INICIO MENU **** -->

	<div class="navigation">

	 <div class="toc" id="sumario">
	    <div class="toc-title">Sumário</div>
	    <ul>
	       <li>
		  <span class="chapter">
		     <a href="#chp_intro">1. Introdução</a>
		  </span>
		  <ul>
		     <li>
			<span class="sect1">
			   <a href="#sec_CruxOqueE">1.1. O que é o Crux?</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_CruxArtefatos">1.2. Crux Artefatos e Projetos</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_Exemplo">1.3. Exemplo</a>
			</span>
		     </li>
		  </ul>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_quickstart">2. Quick Start</a>
		  </span>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_inst_conf">3. Instalação e Configuração</a>
		  </span>
		  <ul>
		     <li>
			<span class="sect1">
			   <a href="#sec_inst_maven">3.1. Via Maven Archetype</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_inst_manual">3.2. Manualmente</a>
			</span>
		     </li>
		  </ul>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_architecture">4. Visão Arquitetura</a>
		  </span>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_view">5. Camada de Visão</a>
		  </span>
		  <ul>
		     <li>
			<span class="sect1">
			   <a href="#sec_view_concepts">5.1.  Conceitos Principais</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_view_screen">5.2. Screen</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_view_view">5.3. View</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_view_template">5.4. Template</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_view_events_call">5.5. Chamada de Eventos</a>
			</span>
		     </li>
		  </ul>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_controller">6. Camada de Controle</a>
		  </span>
		  <ul>
		     <li>
			<span class="sect1">
			   <a href="#sec_control_anot">6.1. Anotações</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_control_vb">6.2. Value Binding</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_control_screen">6.3. Usando as Controllers na View</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_control_comunic">6.4. Communicação entre controladores</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_control_val">6.5. Validação</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_control_rpc_call">6.6. Chamada via RPC</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_control_rest_call">6.7. Chamada via REST</a>
			</span>
		     </li>
		  </ul>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_model">7. Camada de Modelo</a>
		  </span>
		  <ul>
		     <li>
			<span class="sect1">
			   <a href="#sec_model_rpc">7.1. Servidor acesso via RPC</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_model_rest">7.2. Servidor acesso via REST</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_model_bd">7.3. Banco de Dados</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_model_setup">7.4. Setup</a>
			</span>
		     </li>
		  </ul>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_utils">8. Utils</a>
		  </span>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_tools">9. Ferramentas do Crux</a>
		  </span>
		  <ul>
		     <li>
			<span class="sect1">
			   <a href="#sec_tools_schcema">9.1. Generador de Schema</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_tools_compiler">9.2. Compilador do Crux</a>
			</span>
		     </li>
		  </ul>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_archetypes">10. Archetypes</a>
		  </span>
		  <ul>
		     <li>
			<span class="sect1">
			   <a href="#sec_archetypes_A">10.1. Application A</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_archetypes_B">10.2. Application B</a>
			</span>
		     </li>
		  </ul>
	       </li>
	       <li>
		  <span class="chapter">
		     <a href="#chp_components">11. Componentes Crux</a>
		  </span>
		  <ul>
		     <li>
			<span class="sect1">
			   <a href="#sec_compon_use">11.1. Como Usar</a>
			</span>
		     </li>
		     <li>
			<span class="sect1">
			   <a href="#sec_compon_create">11.2. Criação de Componentes</a>
			</span>
		     </li>
		  </ul>
	       </li>
	       <li>
		  <span class="appendix">
		     <a href="#apd_lib_comp">A. Biblioteca de Componentes</a>
		  </span>
	       </li>
	    </ul>
	 </div>

</div>

<!-- ***** FIM MENU ****** -->


<!-- **********  INICIO CONTEUDO ************ -->



         <section class="chapter" id="chp_intro">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 1. Introdução</h1>
                  </div>
               </div>
            </div>
            <div class="toc">
               <div class="toc-title"><a href="#sumario">Sumário</a></div>
               <ul>
                  <li>
                     <span class="sect1">
                        <a href="#sec_CruxOqueE">1.1. O que é o Crux?</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_CruxArtefatos">1.2. Crux Artefatos e Projetos</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_Exemplo">1.3. Exemplo</a>
                     </span>
                  </li>
               </ul>
            </div>
	

	
            <section class="sect1" id="sec_CruxOqueE">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">1.1. O que é o Crux?</h2>
                     </div>
                  </div>
               </div>	

		
               <p>O Crux é um framework para desenvolvimento de aplicações web que necessitem de 
		    um desempenho superior, altíssima escalabilidade e suporte para múltiplos dispositivos, 
		    como desktops, tables, smartphones e TVs. 
		    Ele foi projetado para tirar proveito da velocidade e da facilidade do desenvolvimento 
		    de aplicações corporativas utilizando HTML 5, sendo um um verdadeiro 
		    framework para Web 2.0
		</p>
		
               <p>
			O Crux foi construído sobre o Google Web Toolkit (<span class="bold">
                     <strong>GWT</strong>
                  </span>). 
			Consulte a documentação do <a class="ulink" href="http://www.gwtproject.org/doc/latest/DevGuide.html" target="_top">GWT</a> 
			caso não esteja familiarizado com o seu uso.
		</p>

		
               <p>Neste documento é descrito como usar o Crux Framework através de 
		exemplos que ilustram os recursos disponíveis no Crux. 
		Assim será possível entender os conceitos aplicados no Crux e como
		explorar o framework da melhor forma.</p>
		
		
               <p>Para esta documentaçõa vamos assumir que os seguintes softwares já estão devidamente 
		instalados e configurados: </p>

		
               <div class="orderedlist">
                  <ol class="orderedlist" type="i">
                     <li class="listitem">
				
                        <p>O Java SE Development Kit (JDK), versão 1.6 ou superior</p>
			
                     </li>
                     <li class="listitem">
				
                        <p>O <a class="ulink" href="http://www.eclipse.org/" target="_top">Eclipse</a> IDE</p>
				
                        <p/>
			
                     </li>
                  </ol>
               </div>
	
		
               <p>Para ver uma simples aplicação dos recursos do Crux Framework viste a pagina do 
		   <a class="ulink" href="http://showcase5.cruxframework.org/" target="_top">Showcase 5</a>. </p>

	
            </section>

	
            <section class="sect1" id="sec_CruxArtefatos">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">1.2. Crux Artefatos e Projetos</h2>
                     </div>
                  </div>
               </div> 
		
		
               <p>A distribuição do Crux inclui o seguinte conjunto de arquivos jar:</p>
		
		
               <div class="itemizedlist">
                  <ul class="itemizedlist" style="list-style-type: disc; ">
                     <li class="listitem">
		    
                        <p>crux-runtime.jar - O jar de execução do Crux framework.</p>
		  
                     </li>
                     <li class="listitem">
		    
                        <p>crux-dev.jar - Ferramentas do Crux para desenvolvimento.</p>
		  
                     </li>
                     <li class="listitem">
		    
                        <p>crux-themes.jar - O padrão de css para todos os componentes do Crux.</p>
		  
                     </li>
                     <li class="listitem">
		    
                        <p>crux-gadgets.jar - Suporte a criação de Gadgets com o Crux</p>
		  
                     </li>
                     <li class="listitem">
		    
                        <p>crux-widgets.jar - A bibluiteca de widget do Crux. </p>
		  
                     </li>
                  </ul>
               </div> 
		
		
               <p>No site do <a class="ulink" href="http://www.cruxframework.org/" target="_top">Crux Framework</a> 
		  são disponibilzados projetos de exemplo para quem deseja começar a desenvolver usando o Crux.</p> 
		
	
            </section>

	
            <section class="sect1" id="sec_Exemplo">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">1.3. Exemplo</h2>
                     </div>
                  </div>
               </div> 

		
               <p>O exemplo a seguir ilustra como criar uma pagina HTML simples com o Crux e como interagir usando um Java controller.</p>

		
               <p>Esta é uma Screen, que será o ponto de entrada da aplicação.</p>

<pre class="programlisting" style='color:#000000;background:#ffffff;'>
&lt;html&gt;&lt;body style='color:#000000; background:#ffffff; '&gt;
&lt;span style='color:#004a43; '&gt;&lt;!DOCTYPE html&gt;&lt;/span&gt;
&lt;span style='color:#a65700; '&gt;&lt;&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;html&lt;/span&gt;&lt;span style='color:#274796; '&gt; &lt;/span&gt;
&lt;span style='color:#274796; '&gt;&#xa0;&#xa0;&#xa0;&#xa0;xmlns&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt;&lt;span style='color:#274796; '&gt; &lt;/span&gt;
&lt;span style='color:#274796; '&gt;&#xa0;&#xa0;&#xa0;&#xa0;xmlns:core&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"http://www.cruxframework.org/crux"&lt;/span&gt;&lt;span style='color:#274796; '&gt; &lt;/span&gt;
&lt;span style='color:#274796; '&gt;&#xa0;&#xa0;&#xa0;&#xa0;xmlns:crux&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"http://www.cruxframework.org/crux/widgets"&lt;/span&gt;&lt;span style='color:#274796; '&gt;&lt;/span&gt;
&lt;span style='color:#274796; '&gt;&#xa0;&#xa0;&#xa0;&#xa0;xmlns:gwt&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"http://www.cruxframework.org/crux/gwt"&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;

    &lt;span style='color:#a65700; '&gt;&lt;&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;head&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;
        &lt;span style='color:#a65700; '&gt;&lt;&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;title&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;My App&lt;span style='color:#a65700; '&gt;&lt;/&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;title&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;
    &lt;span style='color:#a65700; '&gt;&lt;/&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;head&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;

    &lt;span style='color:#a65700; '&gt;&lt;&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;body&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;
        &lt;span style='color:#a65700; '&gt;&lt;&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;script type="text/javascript" src="../myapp/myapp.nocache.js"&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&lt;/&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;script&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;

        &lt;span style='color:#a65700; '&gt;&lt;&lt;/span&gt;&lt;span style='color:#5f5035; '&gt;core:screen&lt;/span&gt;&lt;span style='color:#274796; '&gt;&lt;/span&gt;
&lt;span style='color:#274796; '&gt;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;useView&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"*"&lt;/span&gt;&lt;span style='color:#274796; '&gt; &lt;/span&gt;
&lt;span style='color:#274796; '&gt;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;smallViewport&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"user-scalable=no, width=320"&lt;/span&gt;&lt;span style='color:#274796; '&gt;&lt;/span&gt;
&lt;span style='color:#274796; '&gt;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;largeViewport&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"user-scalable=no, width=device-width, height=device-height"&lt;/span&gt;&lt;span style='color:#a65700; '&gt;/&gt;&lt;/span&gt;

        &lt;span style='color:#a65700; '&gt;&lt;&lt;/span&gt;&lt;span style='color:#5f5035; '&gt;crux:simpleViewContainer&lt;/span&gt;&lt;span style='color:#274796; '&gt; &lt;/span&gt;&lt;span style='color:#074726; '&gt;id&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"views"&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;
            &lt;span style='color:#a65700; '&gt;&lt;&lt;/span&gt;&lt;span style='color:#5f5035; '&gt;crux:view&lt;/span&gt;&lt;span style='color:#274796; '&gt; &lt;/span&gt;&lt;span style='color:#074726; '&gt;name&lt;/span&gt;&lt;span style='color:#808030; '&gt;=&lt;/span&gt;&lt;span style='color:#0000e6; '&gt;"main"&lt;/span&gt;&lt;span style='color:#a65700; '&gt;/&gt;&lt;/span&gt;
        &lt;span style='color:#a65700; '&gt;&lt;/&lt;/span&gt;&lt;span style='color:#5f5035; '&gt;crux:simpleViewContainer&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;

    &lt;span style='color:#a65700; '&gt;&lt;/&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;body&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;
&lt;span style='color:#a65700; '&gt;&lt;/&lt;/span&gt;&lt;span style='color:#800000; font-weight:bold; '&gt;html&lt;/span&gt;&lt;span style='color:#a65700; '&gt;&gt;&lt;/span&gt;
</pre>

               <p>Esta é uma View, que nada mais é que uma página Web que foi invocada a partir da Screen acima:</p>

		
               <pre class="programlisting">

&lt;v:view 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:v="http://www.cruxframework.org/view" 
    xmlns:core="http://www.cruxframework.org/crux" 
    xmlns:crux="http://www.cruxframework.org/crux/widgets"
    xmlns:gwt="http://www.cruxframework.org/crux/gwt"
    useResource="xStandardResources"
    useController="mainController"
    onLoad="mainController.onLoad"&gt;
    
    &lt;crux:storyboard id="mainPanel" style="display:block; margin: 50px"&gt;
         &lt;gwt:textBox id="nameTextBox"/&gt;
         &lt;crux:button id="okButton" text="Go!" onSelect="mainController.sayOk"/&gt;
    &lt;/crux:storyboard&gt;
    
&lt;/v:view&gt;

        </pre>

		
               <p>Este é o Controller, presente no lado do Cliente:</p>

		
               <pre class="programlisting">			

@Controller("mainController")
public class MainController 
{
    @Inject
    public MainView screen;
    
    @Inject
    public MainMessages messages;

    @Expose
    public void onLoad()
    {
        //do something
    }
    
    @Expose
    public void sayOk()
    {
        MessageDialog.show(null, messages.alertMessage(), null);
    }
    
    @BindView("main")
    public static interface MainView extends WidgetAccessor
    {
        TextBox nameTextBox();
    }
    
    @MessageName("mainMessages")
    public static interface MainMessages extends Messages
    {
        @DefaultMessage("This is a alert!")
        String alertMessage();
    }
}		
	
		</pre>

		
               <p>A seguir são apresentadas as imagens das telas do exemplo em execução em um desktop ou notebook.</p>

		
               <div class="figure" id="imgSampleApp1">
                  <div class="figure-title">Figure 1.1. Primeira Tela Desktop</div>
                  <div class="figure-contents">
			
			
                     <div class="mediaobject">
                        <img src="images/imgSampleApp1.png" alt="Primeira Tela Desktop"/>
                        <div class="caption">
					
                           <p>Tela da aplicação executada em um Desktop. </p>
				
                        </div>
                     </div>
		
                  </div>
               </div>
               <br class="figure-break"/>

		
               <div class="figure" id="imgSampleApp2">
                  <div class="figure-title">Figure 1.2. Segunda Tela Desktop.</div>
                  <div class="figure-contents">
            
            
                     <div class="mediaobject">
                        <img src="images/imgSampleApp2.png" alt="Segunda Tela Desktop."/>
                        <div class="caption">
					
                           <p>Tela da aplicação executada em um Desktop quando alerta é acionado. </p>
				
                        </div>
                     </div>
        
                  </div>
               </div>
               <br class="figure-break"/>

		
               <p>A seguir são apresentadas as imagens das telas do mesmo exemplo em execução em smartphone.</p>

        
               <div class="figure" id="imgSampleApp3">
                  <div class="figure-title">Figure 1.3. Primeira Tela Mobile</div>
                  <div class="figure-contents">
            
            
                     <div class="mediaobject">
                        <img src="images/imgSampleApp3.png" alt="Primeira Tela Mobile"/>
                        <div class="caption">
					
                           <p>Tela da aplicação executada em um dispositivo mobile (Android). </p>
				
                        </div>
                     </div>
        
                  </div>
               </div>
               <br class="figure-break"/>

        
               <div class="figure" id="imgSampleApp4">
                  <div class="figure-title">Figure 1.4. Segunda Tela Mobile</div>
                  <div class="figure-contents">
            
            
                     <div class="mediaobject">
                        <img src="images/imgSampleApp4.png" alt="Segunda Tela Mobile"/>
                        <div class="caption">
					
                           <p>Tela da aplicação executada em um dispositivo mobile (Android) quando alerta é acionado </p>
				
                        </div>
                     </div>
        
                  </div>
               </div>
               <br class="figure-break"/>

		
               <p>Note que podemos customizar o estilo CSS e o posicionamento das widgets na tela, 
		dependendo do dispositivo onde a aplicação será executada.</p>

	
            </section>


         </section> 



         <section class="chapter" id="chp_quickstart">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 2. Quick Start</h1>
                  </div>
               </div>
            </div>
	

	
            <p>
		Aprenda a criar um projeto Crux em 5 minutos. Com o Maven é possível
		criar projetos Crux de forma rápida. Neste exemplo vamos mostrar como criar um
		projeto	<span class="italic">Hello World</span>
		usando o Maven integrado ao	ambiente Eclipse (plugin M2E).
	</p>

	
            <p> Para instalar o Crux, siga os seguintes passos no Eclipse:
	</p>

	
            <div class="itemizedlist">
               <ul class="itemizedlist" style="list-style-type: disc; ">
                  <li class="listitem">
			
                     <p>
				No menu do Eclipse, localize e selecione a opção
				<span class="guimenu">File</span> ? <span class="guisubmenu">New</span> ? <span class="guisubmenu">Project</span>
			
                     </p>
		
                  </li>
                  <li class="listitem">
			
                     <p>Selecione a opção Maven Project e na janela de diálogo que se
				abrirá, clique no botão Next.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>Na campo Catalog, selecione All Catalogs.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>No capo Filter, digite crux.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>Selecione a opção crux-module-app.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>No próximo diálogo, informe um Group Id, por exemplo,
				meus.testes.crux .</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>Informe um Artifact Id, por exemplo, HelloCrux.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>Informe um Package, por exemplo, meus.testes.crux.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>Altere as propriedades do archetype. Informe HelloCrux em
				module-name e hellocrux em module-short-name.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>Pressione o botão Finish e pronto! Um projeto Crux será criado
				e estará pronto para você começar a explorar. Na imagem abaixo
				podemos ver a estrutura do projeto criado:</p>
			
                     <div class="figure" id="d5e120">
                        <div class="figure-title">Figure 2.1. Estrutura Projeto Crux</div>
                        <div class="figure-contents">
				
				
                           <div>
                              <img src="images/project-structure.jpg" alt="Estrutura Projeto Crux"/>
                           </div>
			
                        </div>
                     </div>
                     <br class="figure-break"/>
		
                  </li>
                  <li class="listitem">
			
                     <p>Localize o arquivo HelloCrux.launch, na pasta raiz do projeto.
				Clique nele com o botão direito do mouse, selecione Run As e, em
				seguida, HelloCrux.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>O console de depuração do GWT (DevMode) se abrirá. Quando
				habilitado, clique no botão Launch Default Browser. Sua aplicação
				será aberta em uma janela do navegador e se parecerá com essa:
			</p>
			
                     <div class="figure" id="d5e127">
                        <div class="figure-title">Figure 2.2. Projeto Crux em execução</div>
                        <div class="figure-contents">
				
				
                           <div>
                              <img src="images/project-running.jpg" alt="Projeto Crux em execução"/>
                           </div>
			
                        </div>
                     </div>
                     <br class="figure-break"/>
		
                  </li>
                  <li class="listitem">
			
                     <p>Parabéns, você criou seu primeiro projeto em Crux!</p>
		
                  </li>
               </ul>
            </div>


         </section>



         <section class="chapter" id="chp_inst_conf">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 3. Instalação e Configuração</h1>
                  </div>
               </div>
            </div>
            <div class="toc">
               <div class="toc-title"><a href="#chp_intro">Sumário</a></div>
               <ul>
                  <li>
                     <span class="sect1">
                        <a href="#sec_inst_maven">3.1. Via Maven Archetype</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_inst_manual">3.2. Manualmente</a>
                     </span>
                  </li>
               </ul>
            </div>
	

	
            <p>Neste capítulo é apresentado como instalar e configurar o Crux através de archetypes do Maven e manualmente em qualquer outro tipo de projeto no Eclipse ou outra IDE.</p>

	
            <section class="sect1" id="sec_inst_maven">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">3.1. Via Maven Archetype</h2>
                     </div>
                  </div>
               </div>
		
		
		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p>ToDo :  Mostrar que os archetypes do crux estao no Maven central e que podem ser acessados via eclispe. Como está no site do crux novo
			Falar também sobre os tipos de archetypes que temos. O de modulo e o projeto war. Descrever pra que serve cada um deles. O War representa 
			uma aplicacao e pode conter outros modulos.</p>
		
               </div>

	
            </section>

	
            <section class="sect1" id="sec_inst_manual">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">3.2. Manualmente</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> ToDo : Falar que é possível configurar um projeto qualquer que use o GWT para utilizar o Crux. 
			Para isso é preciso adicionar os jars do crux. mostrar onde eles podem ser obtidos e deixar os links</p>
	
			
                  <p> ToDo : :  É necessário adicionar configuracoes do Crux no web.xml. Mostrar um web.xml do crux de exemplo</p>
			
                  <p> ToDo : Mostrar como o projeto pode ser executaado no modo de desenvolvimento. Mostrar um launch de exemplo</p>
			
                  <p> ToDo : Falar sobre os artefatos do Crux que sao necessarios para tempo de compilacao e para tempo de execucao 
			(assim como o GWT tem o gwt-dev.ja e gwt-servlet.jar)</p>
			
                  <p> ToDo : Mostrar como chamar o compilador do Crux via linha de comando e via um script ant</p>
			
                  <p> ToDo : Falar sobre o ServiceMapper e mostrar como pode ser chamado via linha de comando e via ant.</p>
		
               </div>

	
            </section>


         </section> 



         <section class="chapter" id="chp_architecture">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 4. Visão Arquitetura</h1>
                  </div>
               </div>
            </div>
	
	
	
            <p>Neste capítulo é dada um visão geral da arquitetura do Crux Framework.</p>
	
	
            <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
               <h3 class="title">Note</h3>
		
               <p> Aqui será inserido o seguinte conteúdo:</p>
		
               <div class="itemizedlist">
                  <ul style="list-style-type: disc; " class="itemizedlist">
                     <li class="listitem">
		    
                        <p>ToDo :  Um desenho para ilustrar as camadas da Arquiterura do Crux Framework.</p>
		    
                        <div class="figure" id="d5e156">
                           <div class="figure-title">Figure 4.1.  Controle do lado do Cliente no Crux </div>
                           <div class="figure-contents">
				
				
                              <div>
                                 <img src="images/controller-client-side.gif" alt="Controle do lado do Cliente no Crux"/>
                              </div>
			
                           </div>
                        </div>
                        <br class="figure-break"/>
		  
                     </li>
                     <li class="listitem">
		    
                        <p>ToDo :  Descrição simplificadas das camadas de: visão, controle e modelo.</p>
		  
                     </li>
                  </ul>
               </div> 
	
            </div>


         </section>



         <section class="chapter" id="chp_view">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 5. Camada de Visão</h1>
                  </div>
               </div>
            </div>
            <div class="toc">
               <div class="toc-title"><a href="#chp_intro">Sumário</a></div>
               <ul>
                  <li>
                     <span class="sect1">
                        <a href="#sec_view_concepts">5.1.  Conceitos Principais</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_view_screen">5.2. Screen</a>
                     </span>
                     <ul>
                        <li>
                           <span class="sect2">
                              <a href="#sec_view_screen_atrib">5.2.1. Atributos da Screen</a>
                           </span>
                        </li>
                        <li>
                           <span class="sect2">
                              <a href="#sec_view_screen_event">5.2.2. Eventos da Screen</a>
                           </span>
                        </li>
                     </ul>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_view_view">5.3. View</a>
                     </span>
                     <ul>
                        <li>
                           <span class="sect2">
                              <a href="#sec_view_view_atrib">5.3.1. Atributos da View</a>
                           </span>
                        </li>
                        <li>
                           <span class="sect2">
                              <a href="#sec_view_view_event">5.3.2. Eventos da View</a>
                           </span>
                        </li>
                     </ul>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_view_template">5.4. Template</a>
                     </span>
                     <ul>
                        <li>
                           <span class="sect2">
                              <a href="#sec_view_template_parameter">5.4.1. Parametrizando Templates</a>
                           </span>
                        </li>
                        <li>
                           <span class="sect2">
                              <a href="#sec_view_template_component">5.4.2. Templates de Componentes</a>
                           </span>
                        </li>
                        <li>
                           <span class="sect2">
                              <a href="#sec_view_template_layout">5.4.3. Templates de Layouts</a>
                           </span>
                        </li>
                     </ul>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_view_events_call">5.5. Chamada de Eventos</a>
                     </span>
                  </li>
               </ul>
            </div>
	

	
            <p>Neste capítulo é apresentado em detalhes a camada de visão do Crux Framework.
	A camada de visao no Crux é codificada de forma declarativa atraves de arquivos XML,
	assim, as telas do sistema são projetadas e escritas em arquivos XHTML.
	O Crux a partir de versão 5 permite o desenvolvimento de sistemas baseados 
	em <span class="italic">views</span>, e não mais só em <span class="italic">screens</span>.</p>
	
	
            <section class="sect1" id="sec_view_concepts">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">5.1.  Conceitos Principais</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
	        
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  Os tipos de arquivo de visão e pra que servem cada um deles.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Os arquivos ".crux.xml." - Descreve-los como arquivos XHTML que estão associados à Screen. 
			          Eles se ligam ao document principal da página e criam a rootView, que é uma view especial, 
			          associada ao body da pagina e que não é descarregada enquanto a aplicação (página) estiver aberta.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Os containers de view e sobre as views. Os arquivos ".view.xml"</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Descrição da função de um templates. Os arquivos ".template.xml".</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Os widgets e biliotecas de componentes no Crux. Como elas são importadas na 
			      tela atraves de namespaces.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Os arquivos XSDs no Crux, sobre o gerador de schemas da possibilidade de 
			        se adicionar novas bibliotecas personalizadas.</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>		
		
		

		
               <p>No crux existem três tipos de arquivos da camada de visão, onde cada um é usado em um contexto e com uma função. São eles:</p>
		
               <div class="itemizedlist">
                  <ul class="itemizedlist" style="list-style-type: disc; ">
                     <li class="listitem">
				
                        <p>
                           <span class="bold">
                              <strong>Screen</strong>
                           </span> : é definida no arquivo <span class="emphasis">
                              <em>.crux.xml</em>
                           </span> que é um arquivo XHTML. </p>
			
                     </li>
                     <li class="listitem">
				
                        <p>
                           <span class="bold">
                              <strong>View</strong>
                           </span> : é definida no arquivo <span class="emphasis">
                              <em>.view.xml</em>
                           </span> que é um "fragmento" de arquivo XHTML.  </p>
			
                     </li>
                     <li class="listitem">
				
                        <p>
                           <span class="bold">
                              <strong>Template</strong>
                           </span> : é definida no arquivo <span class="emphasis">
                              <em>.template.xml</em>
                           </span> que é um um arquivo XHTML, em geral parametrizado.</p>
			
                     </li>
                  </ul>
               </div>

		
               <p>Nos cabeçalhos dos arquivos de visão são definidas os namespaces de acordo com o 
		os elementos que serão utilizados no arquivo. No exemplo a seguir estão os namespaces de 
		um arquivo de Screen. </p>

		
               <pre class="programlisting">
xmlns="http://www.w3.org/1999/xhtml" 
xmlns:c="http://www.cruxframework.org/crux" 
xmlns:crux="http://www.cruxframework.org/crux/widgets"
xmlns:gwt="http://www.cruxframework.org/crux/gwt"	
		</pre>

	
            </section>

	
            <section class="sect1" id="sec_view_screen">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">5.2. Screen</h2>
                     </div>
                  </div>
               </div>
		

		 
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  os atributos e eventos de uma screen.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  O objeto Screen e como ele pode ser usado nas controllers para refernciar objetos na tela.</p>
			  
                        </li>
                     </ul>
                  </div> 
		 
               </div>

		

		
               <p>A Sreen no Crux é uma abstração para um documento, que por sua vêz pode conter várias páginas (views). 
		A Screen é definida nos arquivos <span class="emphasis">
                     <em>.crux.xml</em>
                  </span> que são arquivos XHTML.
		Ela vem declarada no corpo da página, como no exemplo a seguir. </p>

		
        <pre class="programlisting">

&lt;!DOCTYPE html&gt;

&lt;html 

	xmlns="http://www.w3.org/1999/xhtml" 

	xmlns:c="http://www.cruxframework.org/crux" 

	xmlns:crux="http://www.cruxframework.org/crux/widgets"
	xmlns:gwt="http://www.cruxframework.org/crux/gwt"&gt;
	&lt;head&gt;
		&lt;title&gt;Crux Framework - Hello World&lt;/title&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;script type="text/javascript" src="../hellocrux/hellocrux.nocache.js"&gt;&lt;/script&gt;	
		&lt;c:screen useController="homeController" onLoad="homeController.onLoad" 
			useView="**/views/*" smallViewport="user-scalable=no, width=320" 
			largeViewport="user-scalable=no, width=device-width, height=device-height"
			useResource="xStandardResources" height="100%"/&gt;
		&lt;crux:horizontalSwapViewContainer id="views" height="100%"/&gt;		
	&lt;/body&gt;
&lt;/html&gt;

		</pre>

		
               <p> A screen se liga ao documento principal da página e cria a <span class="italic">rootView</span>, 
		que é uma view especial associada ao body da pagina e que não é descarregada enquanto a aplicação 
		(página) estiver aberta.</p>

		
               <p>Como pode ser visto no exemplo, a Screen não defino os elementos da página a ser exibida. 
		Essas informações serão definidas nas views. </p>

		
               <p>A diretiva <span class="italic">script</span> no exemplo informa que o .... </p>

		
               <p>A <span class="italic">c:screen</span> define como será  .... </p>

		
               <p>As paginas serão exibidas ... por que a diretiva <span class="italic">crux:horizontalSwapViewContainer</span>  .... </p>

		
               <section class="sect2" id="sec_view_screen_atrib">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">5.2.1. Atributos da Screen</h3>
                        </div>
                     </div>
                  </div>
			
			
			
                  <p>Alguns atributos da Screen:</p>

			
                  <div class="table" id="d5e223">
                     <div class="table-title">Table 5.1. Atributos da Screen</div>
                     <div class="table-contents">
				
				
                        <table style="border-collapse: collapse; border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; border-left: 0.5pt solid ; border-right: 0.5pt solid ; ">
                           <colgroup>
                              <col style="text-align: left; " class="c1"/>
                              <col style="text-align: left; " class="c2"/>
                           </colgroup>
                           <thead>
                              <tr>
                                 <th style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; ">Atributo</th>
                                 <th style="text-align: left; border-bottom: 0.5pt solid ; ">Descrição</th>
                              </tr>
                           </thead>
                           <tbody>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; ">useController</td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; ">Define qual será a controler da Screen</td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; ">useView</td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; ">...	</td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; ">Viewports</td>
                                 <td style="text-align: left; ">Para cada viewport podem ser definidas os detalhes de
							apresentação da tela. Temos: smallViewport, largeViewport ... </td>
                              </tr>
                           </tbody>
                        </table>
			
                     </div>
                  </div>
                  <br class="table-break"/>
			
		
               </section>
		
		
               <section class="sect2" id="sec_view_screen_event">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">5.2.2. Eventos da Screen</h3>
                        </div>
                     </div>
                  </div>
			
			
			
                  <p>Os eventos da Screen são:</p>
			
			
                  <div class="table" id="d5e245">
                     <div class="table-title">Table 5.2. Eventos da Screen</div>
                     <div class="table-contents">
				
				
                        <table style="border-collapse: collapse; border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; border-left: 0.5pt solid ; border-right: 0.5pt solid ; ">
                           <colgroup>
                              <col style="text-align: left; " class="c1"/>
                              <col style="text-align: left; " class="c2"/>
                           </colgroup>
                           <thead>
                              <tr>
                                 <th style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Evento </th>
                                 <th style="text-align: left; border-bottom: 0.5pt solid ; "> Descrição </th>
                              </tr>
                           </thead>
                           <tbody>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Load </td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; ">Chamado quando a tela é carregada (load). Esse evento somente é disparado 
							depois que o processo de carregamento da página é concluído. </td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Close </td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; "> Chamado quando a pagina é fechada. </td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Closing </td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; "> Chamado antes de fechar a página.</td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Resize </td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; "> Chamado quando a pagina é redimencionada.</td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; "> HistoryChanged </td>
                                 <td style="text-align: left; "> Chamado quando o botão de voltar do browser é acionado.</td>
                              </tr>
                           </tbody>
                        </table>
			
                     </div>
                  </div>
                  <br class="table-break"/>

		
               </section>

	
            </section>

	
            <section class="sect1" id="sec_view_view">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">5.3. View</h2>
                     </div>
                  </div>
               </div>
		
		
		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  Mais detalhes sobre os arquivos .view.xml. : viewName e viewID.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  O objeto View e como ele pode ser usado nas controllers para referenciar objetos na tela.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Os atributos e eventos de uma view.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Carga, ativacao e descarga de objetos view na aplicacao, assim como fragmentacao de scripts.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  O gerenciamento das views pelos view containers.</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>		
		
		

		
               <p>A View no Crux é uma abstração para uma página. A view é definida nos arquivos 
		<span class="italic">.view.xml</span> que são arquivos XHTML. As views são carregadas dinâmicamente
		na screen de acordo com a navegação do usuário ou as ações da controller.</p>

		
               <p>O código a seguir apresenta uma view que contem um campo de entrada e um botão.</p>
		
		
               <pre class="programlisting">

&lt;v:view 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:v="http://www.cruxframework.org/view" 
	xmlns:core="http://www.cruxframework.org/crux" 
	xmlns:crux="http://www.cruxframework.org/crux/widgets"
	xmlns:gwt="http://www.cruxframework.org/crux/gwt"
	useController="homeController" 
	title="Hello, Crux!"&gt; 
	&lt;crux:styledPanel id="outerPanel" height="200px"&gt;
		&lt;crux:formDisplay id="form"&gt;
			&lt;crux:entry label="What is your name?"&gt;
				&lt;gwt:textBox id="nameTextBox" width="200px"/&gt;
			&lt;/crux:entry&gt;
			&lt;crux:entry horizontalAlignment="center"&gt;
				&lt;crux:button id="okButton" text="Go!" onSelect="homeController.sayHello" 
				             style="display:block"/&gt;
			&lt;/crux:entry&gt;
		&lt;/crux:formDisplay&gt;
	&lt;/crux:styledPanel&gt;
	
&lt;/v:view&gt;

		</pre>
		
		
               <p>Além dos namespaces da screen a view ...</p>
		
		
               <p>Os compenentes Crux como o <span class="italic">crux:entry</span> encampsulam componetes GWT, e dependendo 
		do tamanho da tela podem apresentar o label do campo na frente ou acima. </p>
		
		
               <p>As ações da view também podem acionar métodos do <span class="italic">controller</span> .... </p>
		
		
               <p>A <span class="italic">Controller</span> pode acessar os elementos da View diretamente pelo ...  </p>
		
		
               <pre class="programlisting">
		
public void sayHello()
{
	HorizontalSwapContainer views = (HorizontalSwapContainer) Screen.get("views");
	views.showView("output");
	String name = inputView.nameTextBox().getValue();
	name = StringUtils.isEmpty(name) ? "Annonymous" : name;
	outputView.helloLabel().setText("Hello, " + name + "!");
}

@BindView("input")
public static interface InputView extends WidgetAccessor
{
	TextBox nameTextBox();
}

@BindView("output")
public static interface OutputView extends WidgetAccessor
{
	Label helloLabel();
}

		</pre>

		
               <p>No exemplo anterior os elementos da View são declarados ...  </p>
	

		
               <section class="sect2" id="sec_view_view_atrib">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">5.3.1. Atributos da View</h3>
                        </div>
                     </div>
                  </div>
			
			
			
                  <p>Alguns atributos da View:</p>

			
                  <div class="table" id="d5e301">
                     <div class="table-title">Table 5.3. Atributos da Screen</div>
                     <div class="table-contents">
				
				
                        <table style="border-collapse: collapse; border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; border-left: 0.5pt solid ; border-right: 0.5pt solid ; ">
                           <colgroup>
                              <col style="text-align: left; " class="c1"/>
                              <col style="text-align: left; " class="c2"/>
                           </colgroup>
                           <thead>
                              <tr>
                                 <th style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; ">Atributo</th>
                                 <th style="text-align: left; border-bottom: 0.5pt solid ; ">Descrição</th>
                              </tr>
                           </thead>
                           <tbody>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; ">viewName</td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; ">O atributo viewName é o próprio nome da view, sem a extenção: <span class="italic">.view.xml</span>. 
							Esse atributo pode ser usado para referênviar a view pela Screen. </td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; ">viewID</td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; ">O atributo viewID .	</td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; ">aaa</td>
                                 <td style="text-align: left; ">Para ... </td>
                              </tr>
                           </tbody>
                        </table>
			
                     </div>
                  </div>
                  <br class="table-break"/>
			
		
               </section>
		
		
               <section class="sect2" id="sec_view_view_event">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">5.3.2. Eventos da View</h3>
                        </div>
                     </div>
                  </div>
			
			
			
                  <p>Os eventos da view são:</p>
			
			
                  <div class="table" id="d5e324">
                     <div class="table-title">Table 5.4. Eventos da Screen</div>
                     <div class="table-contents">
				
				
                        <table style="border-collapse: collapse; border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; border-left: 0.5pt solid ; border-right: 0.5pt solid ; ">
                           <colgroup>
                              <col style="text-align: left; " class="c1"/>
                              <col style="text-align: left; " class="c2"/>
                           </colgroup>
                           <thead>
                              <tr>
                                 <th style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Evento </th>
                                 <th style="text-align: left; border-bottom: 0.5pt solid ; "> Descrição </th>
                              </tr>
                           </thead>
                           <tbody>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Load </td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; ">Chamado quando a view é carregada .... </td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Close </td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; "> Chamado ... </td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; "> Create </td>
                                 <td style="text-align: left; "> Chamado ....</td>
                              </tr>
                           </tbody>
                        </table>
			
                     </div>
                  </div>
                  <br class="table-break"/>

		
               </section>
		
	
            </section>

	
            <section class="sect1" id="sec_view_template">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">5.4. Template</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  Mais detalhes sobre os arquivos .template.xml.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Como templates podem receber atributos e tags filhas como parametros.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  A geracao de XSDs para bibliotecas de templates e como elas podem ser 
			        usadas em arquivos .view.xml, .crux.xml, ou mesmo em outros templates.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Como um template poderia ser usado para montar um componente simples de forma declarativa.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Como um template poderia ser usado para montar um esqueleto reaproveitado de pagina, similar aos templates do struts.</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
		

		
               <p>O Template no Crux é defino no arquivo <span class="emphasis">
                     <em>.template.xml</em>
                  </span> que é um arquivo XML parametrizado. Ele pode ser colocado em
		qualquer lugar do classpath, até mesmo em um arquivo .jar. </p>
		
		
               <p>Os templates podem ser usados para:</p>
		
		
               <div class="itemizedlist">
                  <ul class="itemizedlist" style="list-style-type: disc; ">
                     <li class="listitem">
			  	
                        <p>Criar um fragmento que pode ser usado para compor páginas maiores.</p>
			
                     </li>
                     <li class="listitem">
			  	
                        <p>Criar um componete simples de maneira declarativa.</p>
			
                     </li>
                     <li class="listitem">
			  	
                        <p>Definir um layout de página reusável.</p>
			
                     </li>
                  </ul>
               </div>
		  
		
		
               <p>O código a seguir apresenta o exemplo de um template com um fragmento de uma página.
		O arquivo <span class="emphasis">
                     <em>userInfo.template.xml</em>
                  </span> define um cabeçalho simples que exeibe o login e o 
		nome do usuário corrente.Ele também tem seu próprio controller com a lógica de negócio.</p>
		
		
               <pre class="programlisting">

&lt;t:template xmlns="http://www.w3.org/1999/xhtml"
	xmlns:t="http://www.cruxframework.org/templates" 
	xmlns:gwt="http://www.cruxframework.org/crux/gwt" 
	library="custom" useController="userController"&gt;
	&lt;b:HTMLPanel id="userPanel" onLoadWidget="userController.loadUserInfo" &gt;
	   &lt;table&gt;
	          &lt;tr&gt;
	             &lt;td&gt;Login:&lt;/td&gt;
	             &lt;td&gt;&lt;gwt:label id="login" /&gt;&lt;/td&gt;
	          &lt;/tr&gt;
	          &lt;tr&gt;
	             &lt;td&gt;Name:&lt;/td&gt;
	             &lt;td&gt;&lt;gwt:label id="name" /&gt;&lt;/td&gt;
	          &lt;/tr&gt;
	   &lt;/table&gt;
	&lt;/b:HTMLPanel&gt;
&lt;/t:template&gt;

		</pre>

		
               <p>Para usar esse template, basta incluir na página desejada sem nenhuma configuração adicional. Veja o exemplo a seguir.</p>

		
               <pre class="programlisting">

&lt;html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:gwt="http://www.cruxframework.org/crux/gwt" 
      xmlns:c="http://www.cruxframework.org/templates/custom" &gt;
   &lt;head&gt;
       &lt;script language="javascript" src="cruxtest/cruxtest.nocache.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;c:userInfo /&gt;
      ...
   &lt;/body&gt;
&lt;/html&gt;

		</pre>

		
               <section class="sect2" id="sec_view_template_parameter">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">5.4.1. Parametrizando Templates</h3>
                        </div>
                     </div>
                  </div>
			
			
			
                  <p>Um template pode ser definido para receber parametros (atributos) de acordo com o contexto onde será aplicado. 
			Para definir um atributo no template, basta escrever o atributo no formato <span class="italic">#{attributeName}</span>. 
			Neste ponto será feita a substituição do atributo pelo valor.</p>

			
                  <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                     <h3 class="title">Note</h3>
    			
                     <p>To define a child tag for your template, use the tag section. It will create a placeholder in your 
    			template, which will be replaced by the content of the child tag declared on the page that uses the template. 
    			(See the example shown on section Defining a Reusable Layout). </p>
			
                  </div>
			
			
                  <p>No exemplo a seguir é apresentado o mesmo fragmento do exemplo anterior (<span class="emphasis">
                        <em>userInfo.template.xml</em>
                     </span>), 
			porem agora com as variáveis (userLogin e userName) que serão recebidas pelo template.</p>

			
                  <pre class="programlisting">

&lt;t:template xmlns="http://www.w3.org/1999/xhtml"
	xmlns:t="http://www.cruxframework.org/templates" 
	xmlns:gwt="http://www.cruxframework.org/crux/gwt" 
	library="custom"&gt;
	&lt;b:HTMLPanel id="userPanel" &gt;
	   &lt;table&gt;
	          &lt;tr&gt;
	             &lt;td&gt;Login:&lt;/td&gt;
	             &lt;td&gt;&lt;gwt:label id="login" value="#{userLogin}" /&gt;&lt;/td&gt;
	          &lt;/tr&gt;
	          &lt;tr&gt;
	             &lt;td&gt;Name:&lt;/td&gt;
	             &lt;td&gt;&lt;gwt:label id="name" value="#{userName}" /&gt;&lt;/td&gt;
	          &lt;/tr&gt;
	   &lt;/table&gt;
	&lt;/b:HTMLPanel&gt;
&lt;/t:template&gt;

			</pre>

			
                  <p>Ao incluir o template <span class="italic">userInfo</span> agora são passados como parâmetros 
			os nomes e os valores para os atributos do template.</p>
 
			
                  <pre class="programlisting">

&lt;html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:c="http://www.cruxframework.org/templates/custom" &gt;
   &lt;head&gt;
       &lt;script language="javascript" src="cruxtest/cruxtest.nocache.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;c:userInfo userLogin="joao" userName="João da Silva" /&gt;
   &lt;/body&gt;
&lt;/html&gt;

			</pre>
			
		
               </section>

		
		
               <section class="sect2" id="sec_view_template_component">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">5.4.2. Templates de Componentes</h3>
                        </div>
                     </div>
                  </div>
			

			
                  <p>O arquivo <span class="emphasis">
                        <em>labeledBox.template.xml</em>
                     </span> (exemplo a seguir), define um templatede um componente de caixa de texto com um label.</p>

			
                  <pre class="programlisting">

&lt;t:template xmlns="http://www.w3.org/1999/xhtml"
          xmlns:t="http://www.cruxframework.org/templates" 
          xmlns:gwt="http://www.cruxframework.org/crux/gwt" 
          library="custom"&gt;
   
   &lt;gwt:horizontalPanel id="#{id}.hPanel" &gt;
      &lt;gwt:label id="#{id}.label" text="#{label}:" /&gt; 
      &lt;gwt:textBox id="#{id}" value="#{value}" /&gt;         
   &lt;/gwt:horizontalPanel&gt;         
&lt;/t:template&gt;

			</pre>
			
			
                  <p>Neste exemplo também foi usado o recusso de parametrização dos elementos para deixar o componente mais flexivel. </p>
			
			
                  <p>Para usar o componente em uma página Crux, veja o exemplo a seguir:</p>

			
                  <pre class="programlisting">

&lt;html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:c="http://www.cruxframework.org/templates/custom" &gt;
   &lt;head&gt;
       &lt;script language="javascript" src="cruxtest/cruxtest.nocache.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;c:labeledBox id="personName" label="Name" value="Your name here" /&gt;
   &lt;/body&gt;
&lt;/html&gt;

			</pre>		
			
		
               </section>
		
		
               <section class="sect2" id="sec_view_template_layout">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">5.4.3. Templates de Layouts</h3>
                        </div>
                     </div>
                  </div>
			
			
			
                  <p>O arquivo <span class="emphasis">
                        <em>pageLayout.template.xml</em>
                     </span> (exemplo a seguir), define um template de layout de pagina. 
			Neste layout é exibido um menu à esquerda e um espaço para ser inserido o corpo da página.</p>

			
                  <pre class="programlisting">

&lt;t:template xmlns="http://www.w3.org/1999/xhtml"
      xmlns:t="http://www.cruxframework.org/templates" 
      xmlns:crux="http://www.cruxframework.org/crux/widgets"
      xmlns:gwt="http://www.cruxframework.org/crux/gwt" 
      xmlns:c="http://www.cruxframework.org/templates/custom" 
          library="custom"&gt;

   &lt;gwt:dockPanel id="centeringPanel" width="100%" height="100%"&gt;
      &lt;gwt:cell direction="north" height="70" verticalAlignment="top"&gt;
          &lt;c:userInfo /&gt;
      &lt;/gwt:cell&gt;
      &lt;gwt:cell direction="south"&gt;
         &lt;gwt:dockPanel id="menuTabsDividerPannel"&gt;
            &lt;gwt:cell direction="west"&gt;
               &lt;crux:stackMenu id="menu" onLoadWidget="#{onLoadMenu}" &gt;&lt;/crux:stackMenu&gt;
            &lt;/gwt:cell&gt;
            &lt;gwt:cell direction="east"&gt;
               &lt;t:section name="body" /&gt;
            &lt;/gwt:cell&gt;
         &lt;/gwt:dockPanel&gt;
      &lt;/gwt:cell&gt;
   &lt;/gwt:dockPanel&gt;
&lt;/t:template&gt;

			</pre>
			
			
                  <p>Note que o template <span class="emphasis">
                        <em>pageLayout.template.xml</em>
                     </span> também usou o <span class="emphasis">
                        <em>userInfo.template.xml</em>
                     </span>, 
			definido anteriormente <a class="xref" href="#sec_view_template_parameter" title="5.4.1. Parametrizando Templates">Section 5.4.1, “Parametrizando Templates”</a> no seu cabeçalho.</p>
			
			
                  <p>O template criado anteriomente pode ser usado para definir uma nova página Crux com o exemplo a seguir.</p>

			
                  <pre class="programlisting">

&lt;html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:crux="http://www.cruxframework.org/crux" 
      xmlns:gwt="http://www.cruxframework.org/crux/gwt" 
      xmlns:c="http://www.cruxframework.org/templates/custom" &gt;
   &lt;head&gt;
       &lt;script language="javascript" src="cruxtest/cruxtest.nocache.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;crux:screen useController="myController" /&gt;
      &lt;c:pageLayout onLoadMenu="myController.loadMenuItems"&gt;
         &lt;c:body&gt;
            &lt;!-- Body comes here --&gt;
            &lt;gwt:label id="test" text="Hello World!!" /&gt;
         &lt;/c:body&gt;
      &lt;/c:pageLayout&gt;
   &lt;/body&gt;
&lt;/html&gt;

			</pre>
			
		
               </section>
		
	
            </section>

	
            <section class="sect1" id="sec_view_events_call">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">5.5. Chamada de Eventos</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>	
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  Como devem ser as chamadas de eventos na View.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  O que é useController e quais as chamadas nos .view.xml.</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>




		
               <p>To add an event declaratively, you must create a Controller and give it a name.</p>

		
               <p> An event declaration must follow the pattern 
		"onEventName" = "controllerName.methodName". For example:</p>		
		  
		
		
               <pre class="programlisting">

&lt;html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:crux="http://www.cruxframework.org/crux" 
      xmlns:gwt="http://www.cruxframework.org/crux/gwt" &gt;
   &lt;head&gt;
       &lt;script language="javascript" src="cruxtest/cruxtest.nocache.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   &lt;body&gt;
       &lt;crux:screen onClose='clientHandler.onClose' useController="clientHandler" &gt;
               &lt;gwt:textBox id="myBox" /&gt;
               &lt;gwt:button id="myButton" text="Hello" onClick="clientHandler.helloWorld" /&gt;
           &lt;/crux:screen&gt;
   &lt;/body&gt;
&lt;/html&gt;

		</pre>

Note that you must also "import" your controller through the attribute useController of the screen's tag. 

	</section>


         </section>



         <section class="chapter" id="chp_controller">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 6. Camada de Controle</h1>
                  </div>
               </div>
            </div>
            <div class="toc">
               <div class="toc-title"><a href="#chp_intro">Sumário</a></div>
               <ul>
                  <li>
                     <span class="sect1">
                        <a href="#sec_control_anot">6.1. Anotações</a>
                     </span>
                     <ul>
                        <li>
                           <span class="sect2">
                              <a href="#sec_control_anot_controler">6.1.1. O @Controller </a>
                           </span>
                        </li>
                        <li>
                           <span class="sect2">
                              <a href="#sec_control_anot_inject">6.1.2. O @Inject</a>
                           </span>
                        </li>
                        <li>
                           <span class="sect2">
                              <a href="#sec_control_anot_expose">6.1.3. O @Expose</a>
                           </span>
                        </li>
                     </ul>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_control_vb">6.2. Value Binding</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_control_screen">6.3. Usando as Controllers na View</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_control_comunic">6.4. Communicação entre controladores</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_control_val">6.5. Validação</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_control_rpc_call">6.6. Chamada via RPC</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_control_rest_call">6.7. Chamada via REST</a>
                     </span>
                  </li>
               </ul>
            </div>
	

	
            <p>Neste capítulo é apresentado em detalhes a camada de controle do Crux Framework.
	As classes de controle são chamadas para tratar os eventos. Para criar uma <span class="italic">Controller</span> 
	basta criar uma classe Java com a anotação <span class="italic">@Controller</span>. Na anotação deve ser informada
	o nome pelo qual a classe de controle será referênciada nas páginas.</p>

	
            <p>No exemplo a seguir é declara uma classe <span class="italic">Controller</span> .</p>

	
            <pre class="programlisting">

@Controller("clientHandler")
public class MyController
{
    // ... event handlers here
}

	</pre>

	
            <p>A classe de controle terá uma série de métodos para os tratamentos do eventos. Os métodos de controle devem:</p>
	
	
            <div class="itemizedlist">
               <ul class="itemizedlist" style="list-style-type: disc; ">
                  <li class="listitem">
			
                     <p>Ter visibilidae pública (<span class="italic">public</span>). </p>
		
                  </li>
                  <li class="listitem">
			
                     <p>Ter a anotação  <span class="italic">@Expose</span>.</p>
		
                  </li>
                  <li class="listitem">
			
                     <p>E podem ter ou não argumentos. Se tiver argumentos ele deve ser um <span class="italic">GwtEvent</span> 
			e o método somente pode ser utilizado para tratar esse tipo de evento.  </p>
		
                  </li>
               </ul>
            </div>
	
   
            <p>Veja o exemplo a seguir, com alguns métodos:</p>

	
            <pre class="programlisting">

@Controller("clientHandler")
public class MyController
{
   @Expose
   public void onClose(CloseEvent&lt;Window&gt; event)
   { // code here   
   }
   
   @Expose
   public void helloWorld()
   { // code here   
   }
   
   protected void myMethod(String string)
   { // code here   
   }
}

	</pre>

	
            <p>Note que nesta <span class="italic">Controller</span> existe um método que não atende as condições para 
	tratamento de eventos, o <span class="italic">myMethod</span>. 
	Este método não pode ser chamando de forma declarativa. </p>

	
            <section class="sect1" id="sec_control_anot">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">6.1. Anotações</h2>
                     </div>
                  </div>
               </div>
		

		
               <p>A seguir serão apresentadas as prinicipais anotações da <span class="italic">Controller</span>.</p>

		
               <section class="sect2" id="sec_control_anot_controler">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">6.1.1. O @Controller </h3>
                        </div>
                     </div>
                  </div>
			

			
                  <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                     <h3 class="title">Note</h3>
				
                     <p> Aqui será inserido o seguinte conteúdo:</p>
				
                     <div class="itemizedlist">
                        <ul style="list-style-type: disc; " class="itemizedlist">
                           <li class="listitem">
				    
                              <p>ToDo :  A amarracao entre o nome dado ao controller e sua declaracao no arquivo de view.</p>
				  
                           </li>
                           <li class="listitem">
				    
                              <p>ToDo :  Todos os atributos presentes na anotacao Controller.</p>
				  
                           </li>
                        </ul>
                     </div> 
			
                  </div>
			
			
			
			
                  <p>Quando é declarada uma classe com a anotação <span class="italic">Controller</span>
			ela pode ser referênciada por uma <span class="italic">View</span> 
			ou <span class="italic">Screan</span>. A <span class="italic">Controller</span> 
			também irá expor métodos que poderão ser acionados pelos eventos da 
			<span class="italic">View</span>.</p>
			
			
                  <div class="table" id="d5e459">
                     <div class="table-title">Table 6.1. Atributos da <span class="italic">@Controller</span>
                     </div>
                     <div class="table-contents">
				
				
                        <table style="border-collapse: collapse; border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; border-left: 0.5pt solid ; border-right: 0.5pt solid ; ">
                           <colgroup>
                              <col style="text-align: left; " class="c1"/>
                              <col style="text-align: left; " class="c2"/>
                              <col style="text-align: left; " class="c3"/>
                              <col style="text-align: left; " class="c4"/>
                           </colgroup>
                           <thead>
                              <tr>
                                 <th style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Propriedade </th>
                                 <th style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Requerida </th>
                                 <th style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Valor Padrão </th>
                                 <th style="text-align: left; border-bottom: 0.5pt solid ; "> Descrição </th>
                              </tr>
                           </thead>
                           <tbody>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> value</td>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Sim</td>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Sem valor</td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; "> Define o nome da <span class="italic">Controller</span>. 
							Usado nas paginas para referenciar a <span class="italic">Controller</span>.</td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> stateful</td>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Não</td>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> true</td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; "> Se for "true" um objeto Controller é criado na mesma instancia e é usada
							para tratar todos os eventos. Se for "false" uma nova instancia é usada para cada novo evento.</td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> autoBind</td>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> Não</td>
                                 <td style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "> true	</td>
                                 <td style="text-align: left; border-bottom: 0.5pt solid ; "> Se for "true", ValueObjects são automaticamente vinculados ao componente na View antes do 
							evento ocorrer e vinculados de volta a View quando o tratamento do evento termina.</td>
                              </tr>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; "> lazy</td>
                                 <td style="text-align: left; border-right: 0.5pt solid ; "> Não</td>
                                 <td style="text-align: left; border-right: 0.5pt solid ; "> true	</td>
                                 <td style="text-align: left; "> Se for "true" o objeto <span class="italic">Controller</span> é construído apenas quando
							é chamado pela primeira vez.</td>
                              </tr>
                           </tbody>
                        </table>
			
                     </div>
                  </div>
                  <br class="table-break"/>
	
		
               </section>

		
               <section class="sect2" id="sec_control_anot_inject">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">6.1.2. O @Inject</h3>
                        </div>
                     </div>
                  </div>
			

			
                  <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                     <h3 class="title">Note</h3>
				
                     <p> Aqui será inserido o seguinte conteúdo:</p>
				
                     <div class="itemizedlist">
                        <ul style="list-style-type: disc; " class="itemizedlist">
                           <li class="listitem">
				    
                              <p>ToDo :  Um ....</p>
				  
                           </li>
                           <li class="listitem">
				    
                              <p>ToDo :  Todos os atributos presentes na anotacao Inject (??).</p>
				  
                           </li>
                        </ul>
                     </div> 
			
                  </div>
			
			
			
			
                  <p>O <span class="italic">@Inject</span> é a anotação usada a partir do Crux 5, 
			e na versão 4 era usado o <span class="italic">@Create</span>.</p>
			
			
                  <p>Essa anotação pode ser usada para simplificar o código da <span class="italic">Controller</span>. 
			Ela automaticamente cria e injeta o objeto, de acordo com tipo do campo, e inicializa o campo com o valor. </p>
			
			
                  <p>A criação dos objetos do GWT é feita pelo método GWT.create, assumindo que o gerador associado
			com a requisição foi chamado corretamente.</p>

			
                  <p>Veja o exemplo a seguir:</p>

			
                  <pre class="programlisting">

@Inject
public InputView inputView;

@Inject
public OutputView outputView;

			</pre>
		
			
                  <div class="table" id="d5e514">
                     <div class="table-title">Table 6.2. Atributos da Inject</div>
                     <div class="table-contents">
				
				
                        <table style="border-collapse: collapse; border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; border-left: 0.5pt solid ; border-right: 0.5pt solid ; ">
                           <colgroup>
                              <col style="text-align: left; " class="c1"/>
                              <col style="text-align: left; " class="c2"/>
                           </colgroup>
                           <thead>
                              <tr>
                                 <th style="text-align: left; border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; ">Propriedade</th>
                                 <th style="text-align: left; border-bottom: 0.5pt solid ; ">Requerida</th>
                                 <th style="text-align: left; border-bottom: 0.5pt solid ; ">Valor Padrão</th>
                                 <th style="text-align: left; border-bottom: 0.5pt solid ; ">Descrição</th>
                              </tr>
                           </thead>
                           <tbody>
                              <tr>
                                 <td style="text-align: left; border-right: 0.5pt solid ; ">value</td>
                                 <td style="text-align: left; ">yes</td>
                                 <td style="text-align: left; ">none	</td>
                                 <td style="text-align: left; ">defines the name ...</td>
                              </tr>
                           </tbody>
                        </table>
			
                     </div>
                  </div>
                  <br class="table-break"/>
			
		
               </section>

		
               <section class="sect2" id="sec_control_anot_expose">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">6.1.3. O @Expose</h3>
                        </div>
                     </div>
                  </div>
			

			
                  <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                     <h3 class="title">Note</h3>
				
                     <p> Aqui será inserido o seguinte conteúdo:</p>
				
                     <div class="itemizedlist">
                        <ul style="list-style-type: disc; " class="itemizedlist">
                           <li class="listitem">
				    
                              <p>ToDo :  Um ....</p>
				  
                           </li>
                           <li class="listitem">
				    
                              <p>ToDo :  Todos os atributos presentes na anotacao Expose (??).</p>
				  
                           </li>
                        </ul>
                     </div> 
			
                  </div>
				
			
			
			
                  <p>O <span class="italic">@Expose</span> é a anotação usada nos métodos para export 
            o método externamente no tratamento do evento.</p>	
				
		
               </section>

	
            </section>

	
            <section class="sect1" id="sec_control_vb">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">6.2. Value Binding</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  Apresentar o @DataObject (@ValueObject no Crux 4), @ViewBinder (@ScreenBind no Crux 4) , ViewBindale.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Exemplos de bindPath nos arquivos de view.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Como ler e escrever para um DTO atraves de uma view bindable.</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>

		
			
		
               <p>O Crux provê um mecanismo para ajudar a vincular automaticamnete os valores nos componentes da tela
		e os objetos de dados da <span class="italic">Controller</span> que contém os dados.</p> 

		
               <p>Para criar um objeto de dados na <span class="italic">Controller</span> deve ser usada a
		anotação <span class="italic">@DataObjetct</span> (no Crux 4 a anotação usada era o <span class="italic">@ValueObject</span>).
		Desta forma o Crux para a popular automaticamente os objetos de dados com os valores presentes nos objetos 
		dos componentes da tela antes de rodar o método de tratamento de evento. 
		Após a execução do método de tratamento do evento os valores dos componentes da tela também são atualizados
		com os novos valores dos objetos de dados correspondentes. A seguir é apresentado um exemplo:</p>
		
		
               <p>Essa é uma classe de dados para uma "Pessoa" com a anotação <span class="italic">@DataObjetct</span>.</p>

		
               <pre class="programlisting">

@DataObjetct
public class Person
{
        private String name;
        private String phone;
        
        public String getName() {
                return name;
        }
        public void setName(String name) {
                this.name = name;
        }
        public String getPhone() {
                return phone;
        }
        public void setPhone(String phone) {
                this.phone = phone;
        }
}

		</pre>

		
               <p>Na classe de <span class="italic">@Controller</span> os dados da classe "Pessoa" são manipulados.</p>

		
               <pre class="programlisting">

@Controller("myController")
public class MyClass
{
    @Create
    protected Person person;

    @Expose
    public void myMethod()
    {
        Window.alert(person.getName());
        person.setPhone("1234-5678");
    }
}

		</pre>
			
		
               <p>Na <span class="italic">View</span> a seguir o valor do campo texto "name" vai ser 
		vinculado ao campo "name" do objeto "Pessoa" criado na <span class="italic">Controller</span>
		antes da execução do método <span class="italic">myMethod</span>
		O mesmo será feito para o "phone".</p>
			
		
               <p>Após a execução do método os valores dos campos "name" e "phone" na <span class="italic">View</span>
		são atualizados com os novos valores da classe de dados "Pessoa".</p>
			
		
               <pre class="programlisting">


	**** ALTERAR ESSE EXEMPLO para UMA VIEW *******
	
&lt;crux:view useController="myController" &gt;
     &lt;gwt:textBox id="name" /&gt;
     &lt;gwt:textBox id="phone" /&gt;
     &lt;gwt:button id="myButton" text="Hello" onClick="myController.myMethod" /&gt;
&lt;/crux:view&gt;

		</pre>

		
               <p>Também pode ser usada a anotação <span class="italic">@ViewBinder</span> ao declarar os campos da classe
		de dados. Assim será informado ao Crux qual é o nome nome que os componentes da <span class="italic">View</span>
		deverão usar para se associar aos campos da classe de dados. Veja no exemplo a seguir o uso da anotação 
		<span class="italic">@ViewBinder</span>.</p>

		
               <pre class="programlisting">

@DataObjetct
public class Person
{
        @ViewBinder("person.name")
        private String name;

        @ViewBinder("person.phone")
        private String phone;
        
        public String getName() {
                return name;
        }
        public void setName(String name) {
                this.name = name;
        }
        public String getPhone() {
                return phone;
        }
        public void setPhone(String phone) {
                this.phone = phone;
        }
}

		</pre>
			
		
               <p>O novo exemplo de <span class="italic">View</span> agora usa nos seus campos os mesmos nomes 
		declarados na classe de dados. </p>
			
		
               <pre class="programlisting">


	**** ALTERAR ESSE EXEMPLO para UMA VIEW *******
	
&lt;crux:view useController="myController" &gt;
	&lt;gwt:textBox id="person.name" /&gt;
	&lt;gwt:textBox id="person.phone" /&gt;
	&lt;gwt:button id="myButton" text="Hello" onClick="myController.myMethod" /&gt;
&lt;/crux:view&gt;

		</pre>

	
            </section>

	
            <section class="sect1" id="sec_control_screen">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">6.3. Usando as Controllers na View</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  Como usar controllers nas views.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  A relacao entre views e controllers. Cada view define as 
			    controllers que deseja usar e cada objeto de view carregado cria 
			    sua propria referencia das controllers que utiliza.</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>

	
            </section>

	
            <section class="sect1" id="sec_control_comunic">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">6.4. Communicação entre controladores</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  Os WidgetAccessor, ViewAccessor, ControllerAccessor, @BindView e @BindRootView.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>

	
            </section>

	
            <section class="sect1" id="sec_control_val">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">6.5. Validação</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>


		
			
		
               <p>Crux supports declaration of validators for a controller handler method. A Validator method is called before the 
		handler method itself. If it runs without problem, the handler is called. If it throws any exception, the handler execution 
		is aborted and a message is reported to the user through the Crux Error Handlers.

		To declare a validator method to a given handler method, you just need to use the @Validate annotation :
		</p>


               <pre class="programlisting">

@Controller("clientHandler")
public class MyController
{
   @Validate("myValidationMethod")
   @Expose
   public void onClose(CloseEvent&lt;Window&gt; event)
   {
       // code here   
   }
      
   protected void myValidationMethod(CloseEvent&lt;Window&gt; event) throws ValidateException
   {
       // code here   
   }
}

		</pre>

		
               <p>If no value is passed to the @Validate annotation, Crux tries to find a method named validate methodName.
		</p>

		
               <pre class="programlisting">

@Controller("clientHandler")
public class MyController
{
   
   @Validate
   @Expose
   public void onClose(CloseEvent&lt;Window&gt; event)
   {
       // code here   
   }
      
   protected void validateOnClose() throws ValidateException
   {
       // code here   
   }
}

		</pre>

		
               <p>Note that the validate method can receive a parameter of the same type of the main
		 method parameter type (as in the first example) or no parameter (as in the second example). </p>

	
            </section>

	
            <section class="sect1" id="sec_control_rpc_call">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">6.6. Chamada via RPC</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
		
	
            </section>

	
            <section class="sect1" id="sec_control_rest_call">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">6.7. Chamada via REST</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>

	
            </section>


         </section>



         <section class="chapter" id="chp_model">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 7. Camada de Modelo</h1>
                  </div>
               </div>
            </div>
            <div class="toc">
               <div class="toc-title"><a href="#chp_intro">Sumário</a></div>
               <ul>
                  <li>
                     <span class="sect1">
                        <a href="#sec_model_rpc">7.1. Servidor acesso via RPC</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_model_rest">7.2. Servidor acesso via REST</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_model_bd">7.3. Banco de Dados</a>
                     </span>
                     <ul>
                        <li>
                           <span class="sect2">
                              <a href="#sec_model_bd_on">7.3.1. Banco Online</a>
                           </span>
                        </li>
                        <li>
                           <span class="sect2">
                              <a href="#sec_model_bd_off">7.3.2. Banco Offline</a>
                           </span>
                        </li>
                     </ul>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_model_setup">7.4. Setup</a>
                     </span>
                  </li>
               </ul>
            </div>
	

	
            <p> Codificando o Modelo</p>

	
            <section class="sect1" id="sec_model_rpc">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">7.1. Servidor acesso via RPC</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
		
	
            </section>

	
            <section class="sect1" id="sec_model_rest">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">7.2. Servidor acesso via REST</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
		
	
            </section>

	
            <section class="sect1" id="sec_model_bd">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">7.3. Banco de Dados</h2>
                     </div>
                  </div>
               </div>
		

		
               <section class="sect2" id="sec_model_bd_on">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">7.3.1. Banco Online</h3>
                        </div>
                     </div>
                  </div>
			

			
                  <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                     <h3 class="title">Note</h3>
				
                     <p> Aqui será inserido o seguinte conteúdo:</p>
				
                     <div class="itemizedlist">
                        <ul style="list-style-type: disc; " class="itemizedlist">
                           <li class="listitem">
				    
                              <p>ToDo :  O que é, quando e como usar.</p>
				  
                           </li>
                           <li class="listitem">
				    
                              <p>ToDo :  Um ....</p>
				  
                           </li>
                        </ul>
                     </div> 
			
                  </div>
			
		
               </section>

		
               <section class="sect2" id="sec_model_bd_off">
                  <div class="titlepage">
                     <div>
                        <div>
                           <h3 class="title">7.3.2. Banco Offline</h3>
                        </div>
                     </div>
                  </div>
			

			
                  <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                     <h3 class="title">Note</h3>
				
                     <p> Aqui será inserido o seguinte conteúdo:</p>
				
                     <div class="itemizedlist">
                        <ul style="list-style-type: disc; " class="itemizedlist">
                           <li class="listitem">
				    
                              <p>ToDo :  O que é, quando e como usar.</p>
				  
                           </li>
                           <li class="listitem">
				    
                              <p>ToDo :  Um ....</p>
				  
                           </li>
                        </ul>
                     </div> 
			
                  </div>
			
		
               </section>

	
            </section>

	
            <section class="sect1" id="sec_model_setup">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">7.4. Setup</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
		
	
            </section>


         </section>



         <section class="chapter" id="chp_utils">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 8. Utils</h1>
                  </div>
               </div>
            </div>
	

	
            <p> Biblioteca de manipulação de objetos </p>

	
            <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
               <h3 class="title">Note</h3>
		
               <p> Aqui será inserido o seguinte conteúdo:</p>
		
               <div class="itemizedlist">
                  <ul style="list-style-type: disc; " class="itemizedlist">
                     <li class="listitem">
		    
                        <p>ToDo :  O que é, quando e como usar.</p>
		  
                     </li>
                     <li class="listitem">
		    
                        <p>ToDo :  Um ....</p>
		  
                     </li>
                  </ul>
               </div> 
	
            </div>	


         </section>



         <section class="chapter" id="chp_tools">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 9. Ferramentas do Crux</h1>
                  </div>
               </div>
            </div>
            <div class="toc">
               <div class="toc-title"><a href="#chp_intro">Sumário</a></div>
               <ul>
                  <li>
                     <span class="sect1">
                        <a href="#sec_tools_schcema">9.1. Generador de Schema</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_tools_compiler">9.2. Compilador do Crux</a>
                     </span>
                  </li>
               </ul>
            </div>
	

	
            <p> Ferramentas do Crux Framework </p>

	
            <section class="sect1" id="sec_tools_schcema">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">9.1. Generador de Schema</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
		
	
            </section>

	
            <section class="sect1" id="sec_tools_compiler">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">9.2. Compilador do Crux</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
		
	
            </section>


         </section>



         <section class="chapter" id="chp_archetypes">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 10. Archetypes</h1>
                  </div>
               </div>
            </div>
            <div class="toc">
               <div class="toc-title"><a href="#chp_intro">Sumário</a></div>
               <ul>
                  <li>
                     <span class="sect1">
                        <a href="#sec_archetypes_A">10.1. Application A</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_archetypes_B">10.2. Application B</a>
                     </span>
                  </li>
               </ul>
            </div>
	

	
            <section class="sect1" id="sec_archetypes_A">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">10.1. Application A</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
		
	
            </section>

	
            <section class="sect1" id="sec_archetypes_B">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">10.2. Application B</h2>
                     </div>
                  </div>
               </div>
		
		
		
               <p> Aqui será inserido o seguinte conteúdo:</p>
		
               <div class="itemizedlist">
                  <ul class="itemizedlist" style="list-style-type: disc; ">
                     <li class="listitem">
		    
                        <p>ToDo :  O que é, quando e como usar.</p>
		  
                     </li>
                     <li class="listitem">
		    
                        <p>ToDo :  Um ....</p>
		  
                     </li>
                  </ul>
               </div> 		

	
            </section>

         </section>



         <section class="chapter" id="chp_components">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Chapter 11. Componentes Crux</h1>
                  </div>
               </div>
            </div>
            <div class="toc">
               <div class="toc-title"><a href="#chp_intro">Sumário</a></div>
               <ul>
                  <li>
                     <span class="sect1">
                        <a href="#sec_compon_use">11.1. Como Usar</a>
                     </span>
                  </li>
                  <li>
                     <span class="sect1">
                        <a href="#sec_compon_create">11.2. Criação de Componentes</a>
                     </span>
                  </li>
               </ul>
            </div>
	

	
            <section class="sect1" id="sec_compon_use">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">11.1. Como Usar</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo : O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Um ....</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
	
            </section>

	
            <section class="sect1" id="sec_compon_create">
               <div class="titlepage">
                  <div>
                     <div>
                        <h2 class="title" style="clear: both">11.2. Criação de Componentes</h2>
                     </div>
                  </div>
               </div>
		

		
               <div style="margin-left: 0.5in; margin-right: 0.5in;" class="note">
                  <h3 class="title">Note</h3>
			
                  <p> Aqui será inserido o seguinte conteúdo:</p>
			
                  <div class="itemizedlist">
                     <ul style="list-style-type: disc; " class="itemizedlist">
                        <li class="listitem">
			    
                           <p>ToDo :  O que é, quando e como usar.</p>
			  
                        </li>
                        <li class="listitem">
			    
                           <p>ToDo :  Falar brevemente e referênciar o novo manual de componentes.</p>
			  
                        </li>
                     </ul>
                  </div> 
		
               </div>
			
            </section>

         </section>

         <section class="appendix" id="apd_lib_comp">
            <div class="titlepage">
               <div>
                  <div>
                     <h1 class="title">Appendix A. Biblioteca de Componentes</h1>
                  </div>
               </div>
            </div>
		
            <p> Biblioteca de Componentes - apresentar e link para doc </p>

         </section>

<!-- **********  FIM CONTEUDO ************ -->

</div> <!-- div: BOOK -->
					
				</div>			
			</div>
		</div>
	</gwt:HTMLPanel>
</v:view>